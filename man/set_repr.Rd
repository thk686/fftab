% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/repr.R
\name{set_repr}
\alias{set_repr}
\title{Set Representation of Fourier Coefficients}
\usage{
set_repr(x, repr)
}
\arguments{
\item{x}{A \code{tidy_fft} object containing Fourier coefficients and associated metadata.}

\item{repr}{A character vector specifying the desired representation(s) of the coefficients.
Supported representations include:
\itemize{
\item \code{"cplx"}: Complex representation.
\item \code{"rect"}: Rectangular representation.
\item \code{"polr"}: Polar representation.
}}
}
\value{
A modified \code{tidy_fft} object with Fourier coefficients transformed into the specified representation(s).
}
\description{
Converts the representation format of Fourier coefficients in a \code{tidy_fft} object.
}
\details{
This function allows users to switch between different Fourier coefficient representations:
\itemize{
\item \strong{\code{"cplx"}}: Keeps coefficients in their native complex form.
\item \strong{\code{"rect"}}: Represents coefficients in rectangular format (\code{real} and \code{imaginary} parts).
\item \strong{\code{"polr"}}: Represents coefficients in polar format (\code{magnitude} and \code{phase}).
}

If multiple representations are specified in the \code{repr} vector, they are applied sequentially:
\itemize{
\item The first representation is applied directly.
\item Subsequent representations are applied using \code{.set_repr()} with \code{.keep = "all"}, preserving intermediate transformations.
}
}
\examples{
fft_x <- tidy_fft(sin(seq(0, 2 * pi, length.out = 128)))

# Convert to polar representation
fft_polar <- set_repr(fft_x, "polr")

# Apply multiple representations
fft_multi <- set_repr(fft_x, c("rect", "polr"))

}
\seealso{
\itemize{
\item \code{\link[=.set_repr]{.set_repr()}}
\item \code{\link[=tidy_fft]{tidy_fft()}}
}
}
