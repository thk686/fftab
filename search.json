[{"path":"https://thk686.github.io/tidyfft/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 tidyfft authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://thk686.github.io/tidyfft/articles/fftab.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"fftab","text":"Load package set random seed: fftab function supports various input types, including numeric complex vectors, time series objects, multidimensional arrays.","code":"library(fftab) set.seed(1234)"},{"path":"https://thk686.github.io/tidyfft/articles/fftab.html","id":"vector-input","dir":"Articles","previous_headings":"","what":"Vector Input","title":"fftab","text":"simple example FFT numeric vector: output tibble includes: .dim_1: Normalized frequencies cycles per unit length. even-length vector, maximum frequency Nyquist frequency (0.5). Frequencies wrap around zero, producing negative frequencies. fx: Fourier coefficients complex form. facilitate manipulation, can switch representations—complex (cplx), rectangular (rect), polar (polr): Retrieve individual components, phase modulus, get_* functions: functions work seamlessly across representations, ensuring consistent outputs. Warning: modifying fftab object: multiple representations (e.g., complex, polar, rectangular) present, ensure consistency avoid ambiguity inverse transform. Changes specific columns, arg, automatically propagate representations. Adding deleting rows can lead nonsensical results inverting transform. Always verify structure contents fftab object modifications ensure remains valid.","code":"v <- rnorm(8) v_fft <- fftab(v) print(v_fft) #> # A tibble: 8 × 2 #>   .dim_1 fx            #> *  <dbl> <cpl>         #> 1  0     -2.377+0.000i #> 2  0.125 -0.526-0.225i #> 3  0.25  -1.288-3.676i #> 4  0.375 -2.747+3.093i #> 5  0.5    1.841+0.000i #> 6 -0.375 -2.747-3.093i #> 7 -0.25  -1.288+3.676i #> 8 -0.125 -0.526+0.225i v_fft |> to_rect() |> print(n = 3) #> # A tibble: 8 × 3 #>   .dim_1     re     im #>    <dbl>  <dbl>  <dbl> #> 1  0     -2.38   0     #> 2  0.125 -0.526 -0.225 #> 3  0.25  -1.29  -3.68  #> # ℹ 5 more rows v_fft |> to_polr() |> print(n = 3) #> # A tibble: 8 × 3 #>   .dim_1   mod   arg #>    <dbl> <dbl> <dbl> #> 1  0     2.38   3.14 #> 2  0.125 0.572 -2.74 #> 3  0.25  3.89  -1.91 #> # ℹ 5 more rows v_fft |> set_repr(c(\"polr\", \"rect\", \"cplx\")) |> print(n = 3) #> # A tibble: 8 × 6 #>   .dim_1   mod   arg     re        im fx               #>    <dbl> <dbl> <dbl>  <dbl>     <dbl> <cpl>            #> 1  0     2.38   3.14 -2.38   2.91e-16 -2.377+2.91e-16i #> 2  0.125 0.572 -2.74 -0.526 -2.25e- 1 -0.526-2.25e-01i #> 3  0.25  3.89  -1.91 -1.29  -3.68e+ 0 -1.288-3.68e+00i #> # ℹ 5 more rows v_fft |> get_arg() #> [1]  3.14 -2.74 -1.91  2.30  0.00 -2.30  1.91  2.74"},{"path":"https://thk686.github.io/tidyfft/articles/fftab.html","id":"complex-input","dir":"Articles","previous_headings":"","what":"Complex Input","title":"fftab","text":"fftab object tracks whether input real complex, ensuring correct handling inverse transforms: real-valued input returns real-valued output transform inverted.","code":"cplx <- complex(modulus = rnorm(4), argument = runif(4, 0, pi)) cbind(orig = cplx, reconst = cplx |> fftab() |> ifftab()) #>                orig        reconst #> [1,] -0.2969-0.374i -0.2969-0.374i #> [2,] -0.6677-0.742i -0.6677-0.742i #> [3,] -0.6465-0.430i -0.6465-0.430i #> [4,]  0.0481+0.043i  0.0481+0.043i real_v <- runif(4) cbind(orig = real_v, reconst = real_v |> fftab() |> ifftab()) #>        orig reconst #> [1,] 0.8313  0.8313 #> [2,] 0.0458  0.0458 #> [3,] 0.4561  0.4561 #> [4,] 0.2652  0.2652"},{"path":"https://thk686.github.io/tidyfft/articles/fftab.html","id":"time-series-input","dir":"Articles","previous_headings":"","what":"Time Series Input","title":"fftab","text":"Time series objects R include implicit units frequency attribute. example, sunspot.month dataset represents monthly counts spanning 1749 2014. sampling frequency (12) corresponds cycles per year: , .dim_1 contains frequencies cycles per year. important understand difference, Nyquist frequency 6 cycles per year 1/21/2 cycle per step case analyzing vector without frequency information. original data can restored using ifftab:","code":"sunspot.month |> fftab() |> print(n = 5) #> # A tibble: 3,177 × 2 #>    .dim_1 fx            #> *   <dbl> <cpl>         #> 1 0       165092+    0i #> 2 0.00378  13876+15850i #> 3 0.00755  -2734+16132i #> 4 0.0113   -8428-18111i #> 5 0.0151  -14755- 1861i #> # ℹ 3,172 more rows sunspot.month |> fftab() |> ifftab() |> str() #>  Time-Series [1:3177] from 1749 to 2014: 58 62.6 70 55.7 85 ..."},{"path":"https://thk686.github.io/tidyfft/articles/fftab.html","id":"array-input","dir":"Articles","previous_headings":"","what":"Array Input","title":"fftab","text":"Arrays retain dimensions Fourier Transform:","code":"ra <- matrix(rnorm(9), 3) ra |> fftab() |> to_polr() #> # A tibble: 9 × 4 #>   .dim_1 .dim_2   mod    arg #>    <dbl>  <dbl> <dbl>  <dbl> #> 1  0      0     0.875  3.14  #> 2  0.333  0     3.02  -0.511 #> 3 -0.333  0     3.02   0.511 #> 4  0      0.333 3.78  -2.47  #> 5  0.333  0.333 1.73  -1.79  #> 6 -0.333  0.333 3.56  -1.91  #> 7  0     -0.333 3.78   2.47  #> 8  0.333 -0.333 3.56   1.91  #> 9 -0.333 -0.333 1.73   1.79 ra |> fftab() |> ifftab() #>        [,1]   [,2]   [,3] #> [1,] -0.511  2.416 -0.441 #> [2,] -0.911  0.134  0.460 #> [3,] -0.837 -0.491 -0.694"},{"path":"https://thk686.github.io/tidyfft/articles/fftab.html","id":"example-1-applying-a-phase-shift","dir":"Articles","previous_headings":"","what":"Example 1: Applying a Phase Shift","title":"fftab","text":"polar representation allows manipulation phase information. Let’s create sinusoid examine :  Perform FFT plot results:  shift signal, adjust phase (arg) respecting conjugate symmetry: Reconstruct compare shifted signal original:","code":"s1 <- seq(-pi, pi, length.out = 200) |>   tibble::as_tibble() |>   dplyr::mutate(x = value, y = cos(4 * value), treatment = \"original\", .keep = \"none\")  ggplot(s1) +   geom_line(aes(x = x, y = y)) +   theme_classic() s1_fft <- with(s1, y |> fftab() |> to_polr()) plot(s1_fft) # Quick visualization s2_fft <- s1_fft |>   dplyr::mutate(arg = dplyr::case_when(     .dim_1 == 0 ~ arg,      # DC component     .dim_1 == 0.5 ~ arg,    # Nyquist frequency     .dim_1 > 0 ~ arg - pi,  # Positive frequencies     .dim_1 < 0 ~ arg + pi   # Conjugate negative frequencies   )) s1 |>   dplyr::mutate(y = s2_fft |> ifftab(), treatment = \"shifted\") |>   dplyr::bind_rows(s1) |>   ggplot() +   geom_line(aes(x = x, y = y, color = treatment), lwd = 1, alpha = 0.5) +   scale_color_manual(values = c(\"darkblue\", \"darkred\")) +   theme_classic()"},{"path":"https://thk686.github.io/tidyfft/articles/fftab.html","id":"example-2-time-series-filtering","dir":"Articles","previous_headings":"","what":"Example 2: Time Series Filtering","title":"fftab","text":"denoise sunspot.month data, suppress high-frequency components:  dplyr::mutate call zeros magnitudes components periodicity 5 years fewer.","code":"ggplot(fortify(sunspot.month)) +   geom_line(aes(x = Index, y = Data)) +   ylab(\"Sunspot count\") +   xlab(\"Year\") +   theme_classic() -> p1  smoothed <- sunspot.month |>   fftab() |>   to_polr() |>   dplyr::mutate(mod = ifelse(abs(.dim_1) > 0.2, 0, mod)) |>   ifftab()  ggplot(fortify(smoothed)) +   geom_line(aes(x = Index, y = Data)) +   theme_classic() -> p2  p1 / p2"},{"path":"https://thk686.github.io/tidyfft/articles/fftab.html","id":"example-3-2d-gaussian-autocorrelation","dir":"Articles","previous_headings":"","what":"Example 3: 2D Gaussian Autocorrelation","title":"fftab","text":"gaussian kernel frequency domain mangnitudes |F(ω→)|∝e−π2σ2||ω→||2 \\left | F \\left ( \\vec\\omega \\right) \\right | \\propto e^{-\\pi^2\\sigma^2\\left|\\left| \\vec\\omega \\right|\\right| ^2} ||ω→||2\\left|\\left| \\vec\\omega \\right|\\right| ^2 sum squared moduli across dimensions. fftab provides functions computing L2 norm squared L2 norm frequencies number dimensions allowing easy access numbers computations.  result operation circular convolution white-noise input gaussian kernel.","code":"sigma <- 64 scale_fac <- -pi^2 * sigma^2  matrix(rnorm(512 * 512), 512) |>   fftab() |>   to_polr() |>   add_l2sq() |>   dplyr::mutate(mod = mod * exp(scale_fac * l2sq)) |>   ifftab() -> gauss_acf  tidyr::expand_grid(x = 1:512, y = 1:512) |>   tibble::add_column(z = gauss_acf |> as.vector() |> scale()) |>   ggplot() +   aes(x = x, y = y, z = z) +   geom_contour_filled(bins = 16) +   geom_contour(bins = 16, color = \"darkgrey\") +   coord_equal() +   theme_void()"},{"path":"https://thk686.github.io/tidyfft/articles/fftab.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"fftab","text":"fftab package simplifies Fourier Transform operations combining spectral coefficients frequencies tibble. integration enables seamless manipulation frequency-domain data tidyverse tools, making fftab powerful resource spectral analysis.","code":""},{"path":"https://thk686.github.io/tidyfft/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Keitt. Author, maintainer.","code":""},{"path":"https://thk686.github.io/tidyfft/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keitt T (2025). fftab: Tidy Manipulation Fourier Transformed Data. R package version 0.1.0, https://thk686.github.io/fftab/, https://github.com/thk686/fftab.","code":"@Manual{,   title = {fftab: Tidy Manipulation of Fourier Transformed Data},   author = {Timothy Keitt},   year = {2025},   note = {R package version 0.1.0, https://thk686.github.io/fftab/},   url = {https://github.com/thk686/fftab}, }"},{"path":"https://thk686.github.io/tidyfft/index.html","id":"fftab-","dir":"","previous_headings":"","what":"Tidy Manipulation of Fourier Transformed Data","title":"Tidy Manipulation of Fourier Transformed Data","text":"goal fftab make working fft’s R easier consistent. follows tidy philosophy working tabular data rather lists, vectors, . Typical signal processing operations can thus often accomplished single dplyr::mutate call call similar functions. examples shown .","code":""},{"path":"https://thk686.github.io/tidyfft/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tidy Manipulation of Fourier Transformed Data","text":"can install development version fftab GitHub :","code":"# install.packages(\"pak\") pak::pak(\"thk686/fftab\")"},{"path":"https://thk686.github.io/tidyfft/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Tidy Manipulation of Fourier Transformed Data","text":"Using fftab ggplot.","code":"fftab(sunspot.month, norm = TRUE) |>   to_rect(.keep = \"all\") |>   to_polr(.keep = \"all\") |>   print(n = 5) -> ssm.fft #> # A tibble: 3,177 × 6 #>    .dim_1 fx              re     im   mod    arg #>     <dbl> <cpl>        <dbl>  <dbl> <dbl>  <dbl> #> 1 0       51.96+0.00i 52.0    0     52.0   0     #> 2 0.00378  4.37+4.99i  4.37   4.99   6.63  0.852 #> 3 0.00755 -0.86+5.08i -0.860  5.08   5.15  1.74  #> 4 0.0113  -2.65-5.70i -2.65  -5.70   6.29 -2.01  #> 5 0.0151  -4.64-0.59i -4.64  -0.586  4.68 -3.02  #> # ℹ 3,172 more rows ggplot(fortify(sunspot.month)) +   geom_line(aes(x = Index, y = Data)) +   ylab(\"Sunspot count\") +   xlab(\"Year\") +   theme_bw() -> p1  xlocs <- c(1, 0.1, 0.01) xlabs <- c(\"1\", \"10\", \"100\")  ssm.fft |>   dplyr::filter(.dim_1 > 0) |>   ggplot() +   geom_point(aes(x = .dim_1, y = mod)) +   geom_smooth(aes(x = .dim_1, y = mod)) +   scale_y_continuous(trans = \"log\", labels = function(y) signif(y, 1)) +   scale_x_continuous(trans = \"log\", breaks = xlocs, labels = xlabs) +   xlab(\"Cycle duration (years)\") +   ylab(\"Mean amplitude\") +   theme_bw() -> p2  print(p1 / p2)"},{"path":"https://thk686.github.io/tidyfft/reference/add_cplx.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Additional Representations to Fourier Coefficients — add_cplx","title":"Add Additional Representations to Fourier Coefficients — add_cplx","text":"functions add additional representations fftab object without removing modifying existing representations.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/add_cplx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Additional Representations to Fourier Coefficients — add_cplx","text":"","code":"add_cplx(x)  add_rect(x)  add_polr(x)"},{"path":"https://thk686.github.io/tidyfft/reference/add_cplx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Additional Representations to Fourier Coefficients — add_cplx","text":"x fftab object containing Fourier coefficients associated metadata.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/add_cplx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Additional Representations to Fourier Coefficients — add_cplx","text":"fftab object additional representation included.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/add_cplx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Additional Representations to Fourier Coefficients — add_cplx","text":"add_cplx(): Adds complex (\"cplx\") representation Fourier coefficients. add_rect(): Adds rectangular (\"rect\") representation Fourier coefficients. add_polr(): Adds polar (\"polr\") representation Fourier coefficients. functions useful working multiple representations simultaneously without overwriting existing data.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/add_cplx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Additional Representations to Fourier Coefficients — add_cplx","text":"","code":"matrix(1:9, 3) |>   fftab() |>   print(n = 3) |>   add_polr() |>   print(n = 3) |>   add_rect() |>   print(n = 3) |>   add_cplx() |>   print(n = 3) #> # A tibble: 9 × 3 #>   .dim_1 .dim_2 fx             #> *  <dbl>  <dbl> <cpl>          #> 1  0          0 45.0+0.000000i #> 2  0.333      0 -4.5+2.598076i #> 3 -0.333      0 -4.5-2.598076i #> # ℹ 6 more rows #> # A tibble: 9 × 5 #>   .dim_1 .dim_2 fx               mod   arg #>    <dbl>  <dbl> <cpl>          <dbl> <dbl> #> 1  0          0 45.0+0.000000i 45     0    #> 2  0.333      0 -4.5+2.598076i  5.20  2.62 #> 3 -0.333      0 -4.5-2.598076i  5.20 -2.62 #> # ℹ 6 more rows #> # A tibble: 9 × 7 #>   .dim_1 .dim_2 fx               mod   arg    re    im #>    <dbl>  <dbl> <cpl>          <dbl> <dbl> <dbl> <dbl> #> 1  0          0 45.0+0.000000i 45     0     45    0    #> 2  0.333      0 -4.5+2.598076i  5.20  2.62  -4.5  2.60 #> 3 -0.333      0 -4.5-2.598076i  5.20 -2.62  -4.5 -2.60 #> # ℹ 6 more rows #> # A tibble: 9 × 7 #>   .dim_1 .dim_2 fx               mod   arg    re    im #>    <dbl>  <dbl> <cpl>          <dbl> <dbl> <dbl> <dbl> #> 1  0          0 45.0+0.000000i 45     0     45    0    #> 2  0.333      0 -4.5+2.598076i  5.20  2.62  -4.5  2.60 #> 3 -0.333      0 -4.5-2.598076i  5.20 -2.62  -4.5 -2.60 #> # ℹ 6 more rows"},{"path":"https://thk686.github.io/tidyfft/reference/add_l2nm.html","id":null,"dir":"Reference","previous_headings":"","what":"Add L2 Norm and Squared L2 Norm of Frequency Dimensions — add_l2nm","title":"Add L2 Norm and Squared L2 Norm of Frequency Dimensions — add_l2nm","text":"functions compute append L2 norm squared L2 norm frequency dimensions (.dim_* columns) new columns fftab object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/add_l2nm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add L2 Norm and Squared L2 Norm of Frequency Dimensions — add_l2nm","text":"","code":"add_l2nm(x)  add_l2sq(x)  get_l2nm(x)  get_l2sq(x)"},{"path":"https://thk686.github.io/tidyfft/reference/add_l2nm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add L2 Norm and Squared L2 Norm of Frequency Dimensions — add_l2nm","text":"x fftab object containing frequency dimensions (.dim_*) associated metadata.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/add_l2nm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add L2 Norm and Squared L2 Norm of Frequency Dimensions — add_l2nm","text":"vector fftab object additional columns: l2nm: L2 norm frequency dimensions. l2sq: squared L2 norm frequency dimensions.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/add_l2nm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add L2 Norm and Squared L2 Norm of Frequency Dimensions — add_l2nm","text":"add_l2nm(): Appends column l2nm containing L2 norm, calculated square root sum squared values across .dim_* columns. add_l2sq(): Appends column l2sq containing squared L2 norm, calculated sum squared values across .dim_* columns. get_l2nm(): Returns numeric vector representing L2 norm row. get_l2sq(): Returns numeric vector representing squared L2 norm row.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/add_l2nm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add L2 Norm and Squared L2 Norm of Frequency Dimensions — add_l2nm","text":"","code":"matrix(1:9, 3) |>   fftab() |>   print(n = 3) |>   add_l2nm() |>   print(n = 3) |>   add_l2sq() |>   print(n = 3) #> # A tibble: 9 × 3 #>   .dim_1 .dim_2 fx             #> *  <dbl>  <dbl> <cpl>          #> 1  0          0 45.0+0.000000i #> 2  0.333      0 -4.5+2.598076i #> 3 -0.333      0 -4.5-2.598076i #> # ℹ 6 more rows #> # A tibble: 9 × 4 #>   .dim_1 .dim_2 fx              l2nm #>    <dbl>  <dbl> <cpl>          <dbl> #> 1  0          0 45.0+0.000000i 0     #> 2  0.333      0 -4.5+2.598076i 0.333 #> 3 -0.333      0 -4.5-2.598076i 0.333 #> # ℹ 6 more rows #> # A tibble: 9 × 5 #>   .dim_1 .dim_2 fx              l2nm  l2sq #>    <dbl>  <dbl> <cpl>          <dbl> <dbl> #> 1  0          0 45.0+0.000000i 0     0     #> 2  0.333      0 -4.5+2.598076i 0.333 0.111 #> 3 -0.333      0 -4.5-2.598076i 0.333 0.111 #> # ℹ 6 more rows"},{"path":"https://thk686.github.io/tidyfft/reference/can_repr.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage Representations of a fftab Object — can_repr","title":"Manage Representations of a fftab Object — can_repr","text":"functions handle representation management fftab object:","code":""},{"path":"https://thk686.github.io/tidyfft/reference/can_repr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage Representations of a fftab Object — can_repr","text":"","code":"can_repr(x, repr)  get_repr(x)  set_repr(x, repr)"},{"path":"https://thk686.github.io/tidyfft/reference/can_repr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage Representations of a fftab Object — can_repr","text":"x fftab object. repr can_repr(), character vector specifying representations (\"polr\", \"rect\", \"cplx\").","code":""},{"path":"https://thk686.github.io/tidyfft/reference/can_repr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage Representations of a fftab Object — can_repr","text":"can_repr(): Logical value (TRUE FALSE) indicating object supports specified representations. get_repr(): character vector current representations. set_repr(): modified fftab object specified representation(s).","code":""},{"path":"https://thk686.github.io/tidyfft/reference/can_repr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Manage Representations of a fftab Object — can_repr","text":"get_repr(): Retrieve current representations. can_repr(): Check object supports specific representations. set_repr(): Convert object one specified representations.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/can_repr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manage Representations of a fftab Object — can_repr","text":"","code":"fftab(c(1, 0, -1, 0)) |> can_repr(\"cplx\") #> [1] TRUE  fftab(c(1, 0, -1, 0)) |> get_repr() #> [1] \"cplx\"  fftab(c(1, 0, -1, 0)) |> set_repr(c(\"polr\", \"rect\")) #> # A tibble: 4 × 5 #>   .dim_1   mod   arg    re    im #>    <dbl> <dbl> <dbl> <dbl> <dbl> #> 1   0        0     0     0     0 #> 2   0.25     2     0     2     0 #> 3   0.5      0     0     0     0 #> 4  -0.25     2     0     2     0"},{"path":"https://thk686.github.io/tidyfft/reference/cross_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","title":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","text":"cross_spec function computes cross-spectrum two inputs using Fourier transform. supports multiple input types including numeric vectors, time series (ts), arrays, fftab objects. function provides options normalization controlling whether conjugate second input used.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/cross_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","text":"","code":"cross_spec(a, b, norm = FALSE, conj = TRUE)  # Default S3 method cross_spec(a, b, norm = FALSE, conj = TRUE)  # S3 method for class 'ts' cross_spec(a, b, norm = FALSE, conj = TRUE)  # S3 method for class 'array' cross_spec(a, b, norm = FALSE, conj = TRUE)  # S3 method for class 'fftab' cross_spec(a, b, norm = FALSE, conj = TRUE)"},{"path":"https://thk686.github.io/tidyfft/reference/cross_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","text":"first input cross FFT. Supported types include numeric vectors, ts objects, arrays, fftab objects. b second input cross FFT. Must match dimensions structure . norm Logical; TRUE, normalizes Fourier transforms computation. Default FALSE. conj Logical; TRUE, uses complex conjugate Fourier transform b. Default TRUE.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/cross_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","text":"object representing cross-spectrum: default fftab methods: fftab object. ts objects: fftab object .tsp attributes inherited . arrays: fftab object .dim attributes inherited .","code":""},{"path":"https://thk686.github.io/tidyfft/reference/cross_spec.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","text":"cross_spec(default): Default method computing cross FFT. Converts inputs fftab objects computation. cross_spec(ts): Method time series (ts) objects. Ensures time series frequencies consistent preserves tsp attribute. cross_spec(array): Method array inputs. Ensures dimensions consistent preserves dim attribute. cross_spec(fftab): Method fftab objects. Performs cross-frequency transform directly using Fourier transforms b.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/cross_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","text":"","code":"cross_spec(rnorm(8), rnorm(8), norm = TRUE) #> # A tibble: 8 × 2 #>   .dim_1 fx                      #> *  <dbl> <cpl>                   #> 1  0      0.08308948+0.00000000i #> 2  0.125  0.10985200-0.12520060i #> 3  0.25   0.08367576-0.08516305i #> 4  0.375  0.03773447-0.06840483i #> 5  0.5   -0.47643722+0.00000000i #> 6 -0.375  0.03773447+0.06840483i #> 7 -0.25   0.08367576+0.08516305i #> 8 -0.125  0.10985200+0.12520060i  cross_spec(   ts(rnorm(8), frequency = 4),   ts(rnorm(8), frequency = 4) ) #> # A tibble: 8 × 2 #>   .dim_1 fx                     #> *  <dbl> <cpl>                  #> 1    0     0.2644164+0.0000000i #> 2    0.5  -0.8349846-1.3687810i #> 3    1    -0.1098456-1.7697982i #> 4    1.5 -11.9966929+0.1242991i #> 5    2    -2.3836460+0.0000000i #> 6   -1.5 -11.9966929-0.1242991i #> 7   -1    -0.1098456+1.7697982i #> 8   -0.5  -0.8349846+1.3687810i"},{"path":"https://thk686.github.io/tidyfft/reference/dot-as_fftab_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a FFTAB Object — .as_fftab_obj","title":"Build a FFTAB Object — .as_fftab_obj","text":"Converts object fftab object additional metadata attributes.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-as_fftab_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a FFTAB Object — .as_fftab_obj","text":"","code":".as_fftab_obj(x, .is_normalized, .is_complex, ...)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-as_fftab_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a FFTAB Object — .as_fftab_obj","text":"x input object convert, typically tibble data frame. .is_normalized logical value indicating input normalized. .is_complex logical value indicating original data complex. ... Additional attributes include structured object, metadata specific attributes required Fourier Transform analysis.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-as_fftab_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a FFTAB Object — .as_fftab_obj","text":"input object x, fftab class additional attributes provided ....","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Normalized Correlation Between Two Signals — .correlation","title":"Compute Normalized Correlation Between Two Signals — .correlation","text":"Computes normalized correlation two signals based Fourier representations.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-correlation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Normalized Correlation Between Two Signals — .correlation","text":"","code":".correlation(a, b)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Normalized Correlation Between Two Signals — .correlation","text":"fftab object signal representing first input. b fftab object signal representing second input.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-correlation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Normalized Correlation Between Two Signals — .correlation","text":"numeric value representing normalized correlation two signals.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-correlation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Normalized Correlation Between Two Signals — .correlation","text":"function computes cross-spectrum two signals, removes DC component, calculates real part cross-spectrum sum. result normalized using variances signals. Normalization ensures correlation value lies -1 1.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-dim.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Object Dimensions — .dim","title":"Retrieve Object Dimensions — .dim","text":"Retrieves .dim attribute object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-dim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Object Dimensions — .dim","text":"","code":".dim(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-dim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Object Dimensions — .dim","text":"x R object check dimensions.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-dim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Object Dimensions — .dim","text":".dim attribute NULL present.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fft.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Fast Fourier Transform (FFT) of a Vector — .fft","title":"Compute the Fast Fourier Transform (FFT) of a Vector — .fft","text":"Computes Fast Fourier Transform (FFT) numeric vector. Optionally, normalizes result dividing length input vector.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Fast Fourier Transform (FFT) of a Vector — .fft","text":"","code":".fft(x, norm = FALSE)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-fft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Fast Fourier Transform (FFT) of a Vector — .fft","text":"x numeric vector representing input signal transform. norm logical value indicating whether normalize FFT output dividing length input vector. Default FALSE.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Fast Fourier Transform (FFT) of a Vector — .fft","text":"complex vector representing FFT input signal.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fft.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the Fast Fourier Transform (FFT) of a Vector — .fft","text":"function wraps around base R stats::fft function provides option normalization.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/dot-find_dc_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary search for the DC row in lexicographically sorted data — .find_dc_row","title":"Binary search for the DC row in lexicographically sorted data — .find_dc_row","text":"Binary search DC row lexicographically sorted data","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-find_dc_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary search for the DC row in lexicographically sorted data — .find_dc_row","text":"","code":".find_dc_row(df)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-find_dc_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binary search for the DC row in lexicographically sorted data — .find_dc_row","text":"df tibble data.frame .dim_* columns sorted lexicographically.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-find_dc_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binary search for the DC row in lexicographically sorted data — .find_dc_row","text":"Row index DC component (0,0,...,0).","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fourier_frequencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Fourier frequencies for default inputs — .fourier_frequencies","title":"Compute Fourier frequencies for default inputs — .fourier_frequencies","text":"Computes normalized Fourier frequencies scalar vector inputs, evenly spaced -0.5 0.5.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fourier_frequencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Fourier frequencies for default inputs — .fourier_frequencies","text":"","code":".fourier_frequencies(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-fourier_frequencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Fourier frequencies for default inputs — .fourier_frequencies","text":"x scalar vector representing length sequence.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fourier_frequencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Fourier frequencies for default inputs — .fourier_frequencies","text":"numeric vector containing normalized Fourier frequencies.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-frequency.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Frequency — .frequency","title":"Retrieve Frequency — .frequency","text":"Retrieves frequency time series object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-frequency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Frequency — .frequency","text":"","code":".frequency(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-frequency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Frequency — .frequency","text":"x fftab object time series.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-frequency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Frequency — .frequency","text":"frequency value 1 time series.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-get_dim_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Columns Starting with .dim_ — .get_dim_cols","title":"Select Columns Starting with .dim_ — .get_dim_cols","text":"Selects columns data frame whose names start .dim_.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-get_dim_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Columns Starting with .dim_ — .get_dim_cols","text":"","code":".get_dim_cols(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-get_dim_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Columns Starting with .dim_ — .get_dim_cols","text":"x data frame tibble select columns.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-get_dim_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Columns Starting with .dim_ — .get_dim_cols","text":"data frame containing columns start .dim_.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_array.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an Object is an Array — .is_array","title":"Check if an Object is an Array — .is_array","text":"Determines object .dim attribute, indicating array.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an Object is an Array — .is_array","text":"","code":".is_array(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an Object is an Array — .is_array","text":"x R object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_array.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an Object is an Array — .is_array","text":"TRUE object .dim attribute, FALSE otherwise.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_complex.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an Object is Complex — .is_complex","title":"Check if an Object is Complex — .is_complex","text":"Checks whether object .is_complex attribute.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_complex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an Object is Complex — .is_complex","text":"","code":".is_complex(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_complex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an Object is Complex — .is_complex","text":"x R object check complexity.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_complex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an Object is Complex — .is_complex","text":"logical value indicating whether .is_complex attribute TRUE.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_normalized.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an Object is Normalized — .is_normalized","title":"Check if an Object is Normalized — .is_normalized","text":"Checks whether object .is_normalized attribute.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_normalized.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an Object is Normalized — .is_normalized","text":"","code":".is_normalized(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_normalized.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an Object is Normalized — .is_normalized","text":"x R object check normalization.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_normalized.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an Object is Normalized — .is_normalized","text":"logical value indicating whether .is_normalized attribute TRUE. Returns NULL attribute exist.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an Object is a Time Series — .is_ts","title":"Check if an Object is a Time Series — .is_ts","text":"Determines object .tsp attribute.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an Object is a Time Series — .is_ts","text":"","code":".is_ts(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an Object is a Time Series — .is_ts","text":"x R object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an Object is a Time Series — .is_ts","text":"TRUE object .tsp attribute, FALSE otherwise.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-num_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the number of samples in an input — .num_samples","title":"Compute the number of samples in an input — .num_samples","text":"helper function determines number samples input object. vector, returns length. matrix data frame, returns number rows.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-num_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the number of samples in an input — .num_samples","text":"","code":".num_samples(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-num_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the number of samples in an input — .num_samples","text":"x input object (scalar, vector, matrix, data frame).","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-num_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the number of samples in an input — .num_samples","text":"integer representing number samples (rows) input object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-nyquist.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Nyquist Frequency — .nyquist","title":"Compute Nyquist Frequency — .nyquist","text":"Computes Nyquist frequency object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-nyquist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Nyquist Frequency — .nyquist","text":"","code":".nyquist(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-nyquist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Nyquist Frequency — .nyquist","text":"x R object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-nyquist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Nyquist Frequency — .nyquist","text":"Nyquist frequency (.frequency(x) / 2).","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-phase_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Phase Difference Between Two Signals — .phase_diff","title":"Compute Phase Difference Between Two Signals — .phase_diff","text":"Computes phase difference two signals based cross-spectrum, symmetric redundant frequency components removed.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-phase_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Phase Difference Between Two Signals — .phase_diff","text":"","code":".phase_diff(a, b)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-phase_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Phase Difference Between Two Signals — .phase_diff","text":"fftab object signal representing first input. b fftab object signal representing second input.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-phase_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Phase Difference Between Two Signals — .phase_diff","text":"numeric value representing phase difference (radians) two signals.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-phase_diff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Phase Difference Between Two Signals — .phase_diff","text":"function computes cross-spectrum two signals, removes symmetric redundant frequency components, converts result polar representation, weights phase angles magnitudes, calculates weighted average phase difference. Removing symmetric components ensures accurate phase alignment, avoiding ambiguity caused redundant negative frequencies.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-set_repr.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Representation Format — .set_repr","title":"Set Representation Format — .set_repr","text":"Converts object specific representation format.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-set_repr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Representation Format — .set_repr","text":"","code":".set_repr(x, repr, .keep = \"unused\")"},{"path":"https://thk686.github.io/tidyfft/reference/dot-set_repr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Representation Format — .set_repr","text":"x R object. repr representation type (\"cplx\", \"rect\", \"polr\"). .keep Controls preservation data.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-set_repr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Representation Format — .set_repr","text":"object specified representation format.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-shift_phase.html","id":null,"dir":"Reference","previous_headings":"","what":"Shift Phase — .shift_phase","title":"Shift Phase — .shift_phase","text":"Adjusts phase Fourier coefficients.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-shift_phase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shift Phase — .shift_phase","text":"","code":".shift_phase(x, shift)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-shift_phase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shift Phase — .shift_phase","text":"x R object. shift numeric value indicating phase shift.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-size.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Object Size — .size","title":"Retrieve Object Size — .size","text":"Retrieves .size attribute object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Object Size — .size","text":"","code":".size(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Object Size — .size","text":"x R object check size.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Object Size — .size","text":".size attribute NULL present.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-tsp.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Time Series Parameters — .tsp","title":"Retrieve Time Series Parameters — .tsp","text":"Retrieves .tsp attribute object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-tsp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Time Series Parameters — .tsp","text":"","code":".tsp(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-tsp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Time Series Parameters — .tsp","text":"x R object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-tsp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Time Series Parameters — .tsp","text":".tsp attribute NULL present.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-variance.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Variance — .variance","title":"Compute Variance — .variance","text":"Computes variance Fourier coefficients.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Variance — .variance","text":"","code":".variance(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Variance — .variance","text":"x R object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-variance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Variance — .variance","text":"numeric variance value.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/fft_internal_filters.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove DC Component and Symmetric Frequencies — fft_internal_filters","title":"Remove DC Component and Symmetric Frequencies — fft_internal_filters","text":"Internal functions manipulate filter Fourier coefficients fftab objects.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/fft_internal_filters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove DC Component and Symmetric Frequencies — fft_internal_filters","text":"","code":".remove_dc(x)  .remove_symmetric(x)  .split_symmetric(x)"},{"path":"https://thk686.github.io/tidyfft/reference/fft_internal_filters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove DC Component and Symmetric Frequencies — fft_internal_filters","text":"x fftab object containing Fourier coefficients associated metadata.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/fft_internal_filters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove DC Component and Symmetric Frequencies — fft_internal_filters","text":"fftab object filtered coefficients.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/fft_internal_filters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove DC Component and Symmetric Frequencies — fft_internal_filters","text":".remove_dc(): Filters rows .dim_* columns value 0. .remove_symmetric(): real-valued signals, filters redundant, complex-conjugate frequencies. complex-valued signals, filtering applied symmetry relevant. .split_symmetric(): Splits coefficients symmetric asymmetric parts.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/fftab-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fftab: Tidy Manipulation of Fourier Transformed Data — fftab-package","title":"fftab: Tidy Manipulation of Fourier Transformed Data — fftab-package","text":"'fftab' package stores Fourier coefficients tibble allows manipulation various ways. Functions available converting complex, rectangular ('re', 'im'), polar ('mod', 'arg') representations, well extracting components vectors matrices. Inputs can include vectors, time series, arrays arbitrary dimensions, restored original form inverting transform. Since 'fftab' stores Fourier frequencies columns tibble, many standard operations spectral data can easily performed using tidy packages like 'dplyr'.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/fftab-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fftab: Tidy Manipulation of Fourier Transformed Data — fftab-package","text":"Maintainer: Timothy Keitt tkeitt@gmail.com","code":""},{"path":"https://thk686.github.io/tidyfft/reference/fftab.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform FFT and IFFT with Tidy Results — fftab","title":"Perform FFT and IFFT with Tidy Results — fftab","text":"Provides functions compute Fast Fourier Transform (FFT) inverse (IFFT) maintaining results tabular format. Supports vectors, time series (ts), arrays inputs.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/fftab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform FFT and IFFT with Tidy Results — fftab","text":"","code":"fftab(x, norm = FALSE)  # Default S3 method fftab(x, norm = FALSE)  # S3 method for class 'ts' fftab(x, norm = FALSE)  # S3 method for class 'array' fftab(x, norm = FALSE)  ifftab(x)"},{"path":"https://thk686.github.io/tidyfft/reference/fftab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform FFT and IFFT with Tidy Results — fftab","text":"x Input object compute FFT IFFT. can : numeric vector (default method fftab). time series object (ts) fftab.ts. multidimensional numeric array fftab.array. fftab object ifftab. norm Logical. TRUE, computes normalized coefficients FFT.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/fftab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform FFT and IFFT with Tidy Results — fftab","text":"fftab: tibble containing: Fourier frequencies (.dim_1, .dim_2, etc.). FFT values stored fx column complex values. ifftab: vector, array, time series object representing reconstructed signal.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/fftab.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform FFT and IFFT with Tidy Results — fftab","text":"fftab organizes FFT results tibble downstream analysis. ifftab ensures reconstructed signals match input structure (e.g., arrays, ts).","code":""},{"path":"https://thk686.github.io/tidyfft/reference/fftab.html","id":"fft","dir":"Reference","previous_headings":"","what":"FFT","title":"Perform FFT and IFFT with Tidy Results — fftab","text":"fftab function computes FFT different input types: Default Input (fftab.default): Computes FFT numeric vectors. Time Series Input (fftab.ts): Handles FFT ts objects, scaling frequencies appropriately. Array Input (fftab.array): Processes multidimensional arrays. Results returned tibble containing Fourier frequencies FFT values.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/fftab.html","id":"ifft","dir":"Reference","previous_headings":"","what":"IFFT","title":"Perform FFT and IFFT with Tidy Results — fftab","text":"ifftab function reconstructs original signal fftab object. supports vectors, arrays, time series inputs. inverse transform preserves original structure (e.g., array dimensions time series attributes).","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/fftab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform FFT and IFFT with Tidy Results — fftab","text":"","code":"fftab(c(1, 0, -1, 0)) #> # A tibble: 4 × 2 #>   .dim_1 fx    #> *  <dbl> <cpl> #> 1   0    0+0i  #> 2   0.25 2+0i  #> 3   0.5  0+0i  #> 4  -0.25 2+0i   fftab(c(1, 0, -1, 0)) |> ifftab() #> [1]  1  0 -1  0  ts(sin(1:10), frequency = 12) |> fftab() #> # A tibble: 10 × 2 #>    .dim_1 fx                    #>  *  <dbl> <cpl>                 #>  1    0    1.4111884+0.0000000i #>  2    1.2  1.7597704+2.0140018i #>  3    2.4 -0.0540927-3.7860893i #>  4    3.6  0.6552682-1.0310219i #>  5    4.8  0.7536372-0.4010851i #>  6    6    0.7743552+0.0000000i #>  7   -4.8  0.7536372+0.4010851i #>  8   -3.6  0.6552682+1.0310219i #>  9   -2.4 -0.0540927+3.7860893i #> 10   -1.2  1.7597704-2.0140018i  array(1:8, dim = c(2, 2, 2)) |> fftab() #> # A tibble: 8 × 4 #>   .dim_1 .dim_2 .dim_3 fx     #> *  <dbl>  <dbl>  <dbl> <cpl>  #> 1    0      0      0    36+0i #> 2    0.5    0      0    -4+0i #> 3    0      0.5    0    -8+0i #> 4    0.5    0.5    0     0+0i #> 5    0      0      0.5 -16+0i #> 6    0.5    0      0.5   0+0i #> 7    0      0.5    0.5   0+0i #> 8    0.5    0.5    0.5   0+0i"},{"path":"https://thk686.github.io/tidyfft/reference/fourier_frequencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Fourier Frequencies — fourier_frequencies","title":"Compute Fourier Frequencies — fourier_frequencies","text":"Computes Fourier frequencies various types inputs, scalars, vectors, matrices, time series, arrays. generic function dispatches appropriate methods based input type.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/fourier_frequencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Fourier Frequencies — fourier_frequencies","text":"","code":"fourier_frequencies(x)  # Default S3 method fourier_frequencies(x)  # S3 method for class 'ts' fourier_frequencies(x)  # S3 method for class 'array' fourier_frequencies(x)"},{"path":"https://thk686.github.io/tidyfft/reference/fourier_frequencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Fourier Frequencies — fourier_frequencies","text":"x input object. Supported input types: Scalar vector: length sequence. Time series (ts): Frequencies scaled based sampling rate. Multidimensional array matrix: Frequencies computed dimension.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/fourier_frequencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Fourier Frequencies — fourier_frequencies","text":"tibble : .dim_1, .dim_2, ..., represent Fourier frequencies dimension.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/fourier_frequencies.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Fourier Frequencies — fourier_frequencies","text":"function following methods: Default Input (fourier_frequencies.default): Computes normalized Fourier frequencies scalar vector inputs. Time Series Input (fourier_frequencies.ts): Computes frequencies scaled frequency attribute ts object. Multidimensional Arrays (fourier_frequencies.array): Computes frequencies dimension matrix array. See examples details case.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/fourier_frequencies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Fourier Frequencies — fourier_frequencies","text":"","code":"# Default input (vector) fourier_frequencies(8) #> # A tibble: 8 × 1 #>   .dim_1 #>    <dbl> #> 1  0     #> 2  0.125 #> 3  0.25  #> 4  0.375 #> 5  0.5   #> 6 -0.375 #> 7 -0.25  #> 8 -0.125  # Time series input ts(rnorm(36), frequency = 12) |> fourier_frequencies() #> # A tibble: 36 × 1 #>    .dim_1 #>     <dbl> #>  1  0     #>  2  0.333 #>  3  0.667 #>  4  1     #>  5  1.33  #>  6  1.67  #>  7  2     #>  8  2.33  #>  9  2.67  #> 10  3     #> # ℹ 26 more rows  # Multidimensional array input array(1:27, dim = c(3, 3, 3)) |> fourier_frequencies() #> # A tibble: 27 × 3 #>    .dim_1 .dim_2 .dim_3 #>     <dbl>  <dbl>  <dbl> #>  1  0      0      0     #>  2  0.333  0      0     #>  3 -0.333  0      0     #>  4  0      0.333  0     #>  5  0.333  0.333  0     #>  6 -0.333  0.333  0     #>  7  0     -0.333  0     #>  8  0.333 -0.333  0     #>  9 -0.333 -0.333  0     #> 10  0      0      0.333 #> # ℹ 17 more rows  # Matrix input matrix(1:9, nrow = 3, ncol = 3) |> fourier_frequencies() #> # A tibble: 9 × 2 #>   .dim_1 .dim_2 #>    <dbl>  <dbl> #> 1  0      0     #> 2  0.333  0     #> 3 -0.333  0     #> 4  0      0.333 #> 5  0.333  0.333 #> 6 -0.333  0.333 #> 7  0     -0.333 #> 8  0.333 -0.333 #> 9 -0.333 -0.333"},{"path":"https://thk686.github.io/tidyfft/reference/get_fx.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Fourier Coefficients and Components — get_fx","title":"Extract Fourier Coefficients and Components — get_fx","text":"utility functions extract specific components fftab object. get_fx retrieves raw Fourier coefficients, get_fx_norm ensures coefficients either normalized normalized based norm parameter.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/get_fx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Fourier Coefficients and Components — get_fx","text":"","code":"get_fx(x)  get_fx_norm(x, norm = FALSE)  get_re(x)  get_im(x)  get_mod(x)  get_arg(x)"},{"path":"https://thk686.github.io/tidyfft/reference/get_fx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Fourier Coefficients and Components — get_fx","text":"x fftab object containing FFT results. norm Logical. TRUE, forces normalized coefficients. FALSE, ensures non-normalized coefficients.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/get_fx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Fourier Coefficients and Components — get_fx","text":"requested components: get_fx: complex vector raw Fourier coefficients (fx) stored object. get_fx_norm: complex vector Fourier coefficients, explicitly normalized non-normalized based norm parameter. get_re: numeric vector real parts (re). get_im: numeric vector imaginary parts (im). get_mod: numeric vector magnitudes (mod). get_arg: numeric vector phase angles (arg), radians.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/get_fx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Fourier Coefficients and Components — get_fx","text":"get_fx: Returns coefficients stored fftab object. get_fx_norm: Adjusts coefficients desired normalization state. get_re, get_im: Extract real imaginary components. get_mod, get_arg: Compute magnitude phase coefficients.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/get_fx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Fourier Coefficients and Components — get_fx","text":"","code":"fftab(c(1, 0, -1, 0)) |> get_fx() #> [1] 0+0i 2+0i 0+0i 2+0i  fftab(c(1, 0, -1, 0)) |> get_fx_norm(norm = TRUE) #> [1] 0.0+0i 0.5+0i 0.0+0i 0.5+0i  fftab(c(1, 0, -1, 0)) |> get_re() #> [1] 0 2 0 2  fftab(c(1, 0, -1, 0)) |> get_im() #> [1] 0 0 0 0  fftab(c(1, 0, -1, 0)) |> get_mod() #> [1] 0 2 0 2  fftab(c(1, 0, -1, 0)) |> get_arg() #> [1] 0 0 0 0"},{"path":"https://thk686.github.io/tidyfft/reference/get_rect.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Rectangular or Polar Components — get_rect","title":"Extract Rectangular or Polar Components — get_rect","text":"get_rect get_polr functions extract specific components fftab object, representing Fourier coefficients either rectangular polar form.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/get_rect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Rectangular or Polar Components — get_rect","text":"","code":"get_rect(x)  get_polr(x)"},{"path":"https://thk686.github.io/tidyfft/reference/get_rect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Rectangular or Polar Components — get_rect","text":"x matrix object containing FFT results.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/get_rect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Rectangular or Polar Components — get_rect","text":"get_rect: matrix two columns: re: real part coefficients. im: imaginary part coefficients. get_polr: matrix two columns: mod: magnitude coefficients. arg: phase angle coefficients, radians.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/get_rect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Rectangular or Polar Components — get_rect","text":"","code":"fftab(c(1, 0, -1, 0)) |> get_rect() #>      re im #> [1,]  0  0 #> [2,]  2  0 #> [3,]  0  0 #> [4,]  2  0  fftab(c(1, 0, -1, 0)) |> get_polr() #>      mod arg #> [1,]   0   0 #> [2,]   2   0 #> [3,]   0   0 #> [4,]   2   0"},{"path":"https://thk686.github.io/tidyfft/reference/has_cplx.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Representations of a fftab Object — has_cplx","title":"Check Representations of a fftab Object — has_cplx","text":"functions check specific representations present fftab object:","code":""},{"path":"https://thk686.github.io/tidyfft/reference/has_cplx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Representations of a fftab Object — has_cplx","text":"","code":"has_cplx(x)  has_rect(x)  has_polr(x)"},{"path":"https://thk686.github.io/tidyfft/reference/has_cplx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Representations of a fftab Object — has_cplx","text":"x fftab object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/has_cplx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Representations of a fftab Object — has_cplx","text":"Logical value (TRUE FALSE) indicating whether specified representation exists.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/has_cplx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check Representations of a fftab Object — has_cplx","text":"has_cplx(): Checks object complex representation (fx column). has_rect(): Checks object rectangular representation (re, im columns). has_polr(): Checks object polar representation (mod, arg columns).","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/has_cplx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Representations of a fftab Object — has_cplx","text":"","code":"fftab(c(1, 0, -1, 0)) |> has_cplx() #> [1] TRUE  fftab(c(1, 0, -1, 0)) |> has_rect() #> [1] FALSE  fftab(c(1, 0, -1, 0)) |> has_polr() #> [1] FALSE"},{"path":"https://thk686.github.io/tidyfft/reference/phase_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Phase Difference and Maximum Correlation Between Two Signals — phase_diff","title":"Compute Phase Difference and Maximum Correlation Between Two Signals — phase_diff","text":"Computes phase difference maximum normalized correlation two input signals phase-aligning second signal (b) first signal ().","code":""},{"path":"https://thk686.github.io/tidyfft/reference/phase_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Phase Difference and Maximum Correlation Between Two Signals — phase_diff","text":"","code":"phase_diff(a, b)"},{"path":"https://thk686.github.io/tidyfft/reference/phase_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Phase Difference and Maximum Correlation Between Two Signals — phase_diff","text":"numeric vector time series representing first signal. b numeric vector time series representing second signal.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/phase_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Phase Difference and Maximum Correlation Between Two Signals — phase_diff","text":"numeric vector length two: first element represents phase difference (radians) required maximize alignment two signals. second element represents maximum normalized correlation achieved phase alignment.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/phase_diff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Phase Difference and Maximum Correlation Between Two Signals — phase_diff","text":"function performs following steps: Computes Fourier Transform input signals using fftab. Calculates cross-spectrum signals. Converts cross-spectrum polar form computes weighted average phase difference. Adjusts phase second signal (b) using .shift_phase maximize alignment first signal (). Computes normalized correlation phase-aligned signals. correlation normalized using variances signals generally higher correlation original signals due optimal phase alignment.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/phase_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Phase Difference and Maximum Correlation Between Two Signals — phase_diff","text":"","code":"phase_diff(   sin(seq(0, 2 * pi, length.out = 128)),   cos(seq(0, 2 * pi, length.out = 128)) ) #>  phase_diff correlation  #>   1.5707963   0.9999504"},{"path":"https://thk686.github.io/tidyfft/reference/plot.fftab.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the modulus of FFT results — plot.fftab","title":"Plot the modulus of FFT results — plot.fftab","text":"Plots modulus FFT results frequencies.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/plot.fftab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the modulus of FFT results — plot.fftab","text":"","code":"# S3 method for class 'fftab' plot(x, ...)"},{"path":"https://thk686.github.io/tidyfft/reference/plot.fftab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the modulus of FFT results — plot.fftab","text":"x fftab object. contain Fourier-transformed data. ... Additional arguments passed ggplot2::ggplot.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/plot.fftab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the modulus of FFT results — plot.fftab","text":"ggplot object representing modulus FFT results plotted frequencies. plot shows modulus (mod) y-axis frequency values x-axis.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/to_cplx.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a fftab Object Between Representations — to_cplx","title":"Convert a fftab Object Between Representations — to_cplx","text":"functions convert fftab object specified representation: to_cplx(): Converts complex representation (fx). to_rect(): Converts rectangular representation (re, im). to_polr(): Converts polar representation (mod, arg).","code":""},{"path":"https://thk686.github.io/tidyfft/reference/to_cplx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a fftab Object Between Representations — to_cplx","text":"","code":"to_cplx(x, .keep = \"unused\")  to_rect(x, .keep = \"unused\")  to_polr(x, .keep = \"unused\")"},{"path":"https://thk686.github.io/tidyfft/reference/to_cplx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a fftab Object Between Representations — to_cplx","text":"x fftab object. .keep Specifies columns retain. See dplyr::mutate().","code":""},{"path":"https://thk686.github.io/tidyfft/reference/to_cplx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a fftab Object Between Representations — to_cplx","text":"modified fftab object containing specified representation: to_cplx(): Adds fx column complex values. to_rect(): Adds re im columns rectangular components. to_polr(): Adds mod arg columns polar components.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/to_cplx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a fftab Object Between Representations — to_cplx","text":"to_cplx(): Converts rectangular (re, im) polar (mod, arg) components complex form. to_rect(): Converts complex (fx) polar components rectangular form. to_polr(): Converts complex (fx) rectangular components polar form.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/to_cplx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a fftab Object Between Representations — to_cplx","text":"","code":"fftab(c(1, 0, -1, 0)) |> to_cplx() #> # A tibble: 4 × 2 #>   .dim_1 fx    #> *  <dbl> <cpl> #> 1   0    0+0i  #> 2   0.25 2+0i  #> 3   0.5  0+0i  #> 4  -0.25 2+0i   fftab(c(1, 0, -1, 0)) |> to_rect() #> # A tibble: 4 × 3 #>   .dim_1    re    im #>    <dbl> <dbl> <dbl> #> 1   0        0     0 #> 2   0.25     2     0 #> 3   0.5      0     0 #> 4  -0.25     2     0  fftab(c(1, 0, -1, 0)) |> to_polr() #> # A tibble: 4 × 3 #>   .dim_1   mod   arg #>    <dbl> <dbl> <dbl> #> 1   0        0     0 #> 2   0.25     2     0 #> 3   0.5      0     0 #> 4  -0.25     2     0"},{"path":"https://thk686.github.io/tidyfft/news/index.html","id":"fftab-010","dir":"Changelog","previous_headings":"","what":"fftab 0.1.0","title":"fftab 0.1.0","text":"Initial CRAN submission.","code":""}]
