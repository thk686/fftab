[{"path":"https://thk686.github.io/tidyfft/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 tidyfft authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://thk686.github.io/tidyfft/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Keitt. Author, maintainer.","code":""},{"path":"https://thk686.github.io/tidyfft/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keitt T (2024). tidyfft: Tidy manipulation fourier transformed data. R package version 0.0.0.9000, https://thk686.github.io/tidyfft/, https://github.com/thk686/tidyfft.","code":"@Manual{,   title = {tidyfft: Tidy manipulation of fourier transformed data},   author = {Timothy Keitt},   year = {2024},   note = {R package version 0.0.0.9000, https://thk686.github.io/tidyfft/},   url = {https://github.com/thk686/tidyfft}, }"},{"path":"https://thk686.github.io/tidyfft/index.html","id":"tidyfft-","dir":"","previous_headings":"","what":"Tidy manipulation of fourier transformed data","title":"Tidy manipulation of fourier transformed data","text":"goal tidyfft make working fft’s R easier consistent. follows tidy philosophy working tabular data rather lists, vectors, . likely cost terms intermediate copies, etc. using tidy operations. However, can easily extract work raw fourier coefficients required repackage along frequency information. Think cushy SUV eMTB sitting bike rack.","code":""},{"path":"https://thk686.github.io/tidyfft/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tidy manipulation of fourier transformed data","text":"can install development version tidyfft GitHub :","code":"# install.packages(\"pak\") pak::pak(\"thk686/tidyfft\")"},{"path":"https://thk686.github.io/tidyfft/index.html","id":"maintenance-and-contributions","dir":"","previous_headings":"","what":"Maintenance and Contributions","title":"Tidy manipulation of fourier transformed data","text":"intend keep package current availabe CRAN within reason. understand CRAN stives consistency, yet regular addtion new rules breaks existing packageson fairly often, please patient updates. happy receive pull requests suggestions improvements. current code base pure R followed recommendations R Packages book, hope require updates. plan add features sake programming intend fairly stable unchanging minimal core package. like contribute code maintenance, please create issue.","code":""},{"path":"https://thk686.github.io/tidyfft/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Tidy manipulation of fourier transformed data","text":"Using tidy_fft ggplot.","code":"tidy_fft(sunspot.month, norm = TRUE) |>   to_rect(.keep = \"all\") |>   to_polr(.keep = \"all\") |>   print(n = 5) ->   ssm.fft #> # A tibble: 3,177 × 6 #>    .dim_1 fx              re     im   mod    arg #>     <dbl> <cpl>        <dbl>  <dbl> <dbl>  <dbl> #> 1 0       51.96+0.00i 52.0    0     52.0   0     #> 2 0.00378  4.37+4.99i  4.37   4.99   6.63  0.852 #> 3 0.00755 -0.86+5.08i -0.860  5.08   5.15  1.74  #> 4 0.0113  -2.65-5.70i -2.65  -5.70   6.29 -2.01  #> 5 0.0151  -4.64-0.59i -4.64  -0.586  4.68 -3.02  #> # ℹ 3,172 more rows ggplot(fortify(sunspot.month)) +   geom_line(aes(x = Index, y = Data)) +   ylab(\"Sunspot count\") +   xlab(\"Year\") +   theme_bw() ->   p1  xlocs <- c(1, 0.1, 0.01) xlabs <- c(\"1\", \"10\", \"100\")  ssm.fft |>   dplyr::filter(.dim_1 > 0) |>   ggplot() +   geom_point(aes(x = .dim_1, y = mod)) +   geom_smooth(aes(x = .dim_1, y = mod)) +   scale_y_continuous(trans = \"log\", labels = function(y) signif(y, 1)) +   scale_x_continuous(trans = \"log\", breaks = xlocs, labels = xlabs) +   xlab(\"Cycle duration (years)\") +   ylab(\"Mean amplitude\") +   theme_bw() ->   p2  print(p1 / p2)"},{"path":"https://thk686.github.io/tidyfft/reference/can_repr.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage Representations of a tidy_fft Object — can_repr","title":"Manage Representations of a tidy_fft Object — can_repr","text":"functions handle representation management tidy_fft object:","code":""},{"path":"https://thk686.github.io/tidyfft/reference/can_repr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage Representations of a tidy_fft Object — can_repr","text":"","code":"can_repr(x, repr)  get_repr(x)  set_repr(x, repr)"},{"path":"https://thk686.github.io/tidyfft/reference/can_repr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage Representations of a tidy_fft Object — can_repr","text":"x tidy_fft object. repr can_repr(), character vector specifying representations (\"polr\", \"rect\", \"cplx\").","code":""},{"path":"https://thk686.github.io/tidyfft/reference/can_repr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage Representations of a tidy_fft Object — can_repr","text":"can_repr(): Logical value (TRUE FALSE) indicating object supports specified representations. get_repr(): character vector current representations. set_repr(): modified tidy_fft object specified representation(s).","code":""},{"path":"https://thk686.github.io/tidyfft/reference/can_repr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Manage Representations of a tidy_fft Object — can_repr","text":"get_repr(): Retrieve current representations. can_repr(): Check object supports specific representations. set_repr(): Convert object one specified representations.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/can_repr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manage Representations of a tidy_fft Object — can_repr","text":"","code":"tidy_fft(c(1, 0, -1, 0)) |> can_repr(\"cplx\") #> [1] TRUE  tidy_fft(c(1, 0, -1, 0)) |> get_repr() #> [1] \"cplx\"  tidy_fft(c(1, 0, -1, 0)) |> set_repr(c(\"polr\", \"rect\")) #> # A tibble: 4 × 5 #>   .dim_1   mod   arg    re    im #>    <dbl> <dbl> <dbl> <dbl> <dbl> #> 1   0        0     0     0     0 #> 2   0.25     2     0     2     0 #> 3   0.5      0     0     0     0 #> 4  -0.25     2     0     2     0"},{"path":"https://thk686.github.io/tidyfft/reference/cross_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","title":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","text":"cross_spec function computes cross-spectrum two inputs using Fourier transform. supports multiple input types including numeric vectors, time series (ts), arrays, tidy_fft objects. function provides options normalization controlling whether conjugate second input used.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/cross_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","text":"","code":"cross_spec(a, b, norm = FALSE, conj = TRUE)  # Default S3 method cross_spec(a, b, norm = FALSE, conj = TRUE)  # S3 method for class 'ts' cross_spec(a, b, norm = FALSE, conj = TRUE)  # S3 method for class 'array' cross_spec(a, b, norm = FALSE, conj = TRUE)  # S3 method for class 'tidy_fft' cross_spec(a, b, norm = FALSE, conj = TRUE)"},{"path":"https://thk686.github.io/tidyfft/reference/cross_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","text":"first input cross FFT. Supported types include numeric vectors, ts objects, arrays, tidy_fft objects. b second input cross FFT. Must match dimensions structure . norm Logical; TRUE, normalizes Fourier transforms computation. Default FALSE. conj Logical; TRUE, uses complex conjugate Fourier transform b. Default TRUE.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/cross_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","text":"object representing cross-spectrum: default tidy_fft methods: tidy_fft object. ts objects: tidy_fft object .tsp attributes inherited . arrays: tidy_fft object .dim attributes inherited .","code":""},{"path":"https://thk686.github.io/tidyfft/reference/cross_spec.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","text":"cross_spec(default): Default method computing cross FFT. Converts inputs tidy_fft objects computation. cross_spec(ts): Method time series (ts) objects. Ensures time series frequencies consistent preserves tsp attribute. cross_spec(array): Method array inputs. Ensures dimensions consistent preserves dim attribute. cross_spec(tidy_fft): Method tidy_fft objects. Performs cross-frequency transform directly using Fourier transforms b.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/cross_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","text":"","code":"cross_spec(rnorm(8), rnorm(8), norm = TRUE) #> # A tibble: 8 × 2 #>   .dim_1 fx                      #> *  <dbl> <cpl>                   #> 1  0      0.08308948+0.00000000i #> 2  0.125  0.10985200-0.12520060i #> 3  0.25   0.08367576-0.08516305i #> 4  0.375  0.03773447-0.06840483i #> 5  0.5   -0.47643722+0.00000000i #> 6 -0.375  0.03773447+0.06840483i #> 7 -0.25   0.08367576+0.08516305i #> 8 -0.125  0.10985200+0.12520060i  cross_spec(ts(rnorm(8), frequency = 4),            ts(rnorm(8), frequency = 4)) #> # A tibble: 8 × 2 #>   .dim_1 fx                     #> *  <dbl> <cpl>                  #> 1    0     0.2644164+0.0000000i #> 2    0.5  -0.8349846-1.3687810i #> 3    1    -0.1098456-1.7697982i #> 4    1.5 -11.9966929+0.1242991i #> 5    2    -2.3836460+0.0000000i #> 6   -1.5 -11.9966929-0.1242991i #> 7   -1    -0.1098456+1.7697982i #> 8   -0.5  -0.8349846+1.3687810i"},{"path":"https://thk686.github.io/tidyfft/reference/dot-as_tidy_fft_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a Tidy FFT Object — .as_tidy_fft_obj","title":"Build a Tidy FFT Object — .as_tidy_fft_obj","text":"Converts object tidy_fft object additional metadata attributes.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-as_tidy_fft_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a Tidy FFT Object — .as_tidy_fft_obj","text":"","code":".as_tidy_fft_obj(x, .is_normalized, .is_complex, ...)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-as_tidy_fft_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a Tidy FFT Object — .as_tidy_fft_obj","text":"x input object convert, typically tibble data frame. .is_normalized logical value indicating input normalized. .is_complex logical value indicating original data complex. ... Additional attributes include structured object, metadata specific attributes required Fourier Transform analysis.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-as_tidy_fft_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a Tidy FFT Object — .as_tidy_fft_obj","text":"input object x, tidy_fft class additional attributes provided ....","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Normalized Correlation Between Two Signals — .correlation","title":"Compute Normalized Correlation Between Two Signals — .correlation","text":"Computes normalized correlation two signals based Fourier representations.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-correlation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Normalized Correlation Between Two Signals — .correlation","text":"","code":".correlation(a, b)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Normalized Correlation Between Two Signals — .correlation","text":"tidy_fft object signal representing first input. b tidy_fft object signal representing second input.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-correlation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Normalized Correlation Between Two Signals — .correlation","text":"numeric value representing normalized correlation two signals.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-correlation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Normalized Correlation Between Two Signals — .correlation","text":"function computes cross-spectrum two signals, removes DC component, calculates real part cross-spectrum sum. result normalized using variances signals. Normalization ensures correlation value lies -1 1.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-dim.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Object Dimensions — .dim","title":"Retrieve Object Dimensions — .dim","text":"Retrieves .dim attribute object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-dim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Object Dimensions — .dim","text":"","code":".dim(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-dim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Object Dimensions — .dim","text":"x R object check dimensions.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-dim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Object Dimensions — .dim","text":".dim attribute NULL present.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fft.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Fast Fourier Transform (FFT) of a Vector — .fft","title":"Compute the Fast Fourier Transform (FFT) of a Vector — .fft","text":"Computes Fast Fourier Transform (FFT) numeric vector. Optionally, normalizes result dividing length input vector.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Fast Fourier Transform (FFT) of a Vector — .fft","text":"","code":".fft(x, norm = FALSE)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-fft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Fast Fourier Transform (FFT) of a Vector — .fft","text":"x numeric vector representing input signal transform. norm logical value indicating whether normalize FFT output dividing length input vector. Default FALSE.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Fast Fourier Transform (FFT) of a Vector — .fft","text":"complex vector representing FFT input signal.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fft.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the Fast Fourier Transform (FFT) of a Vector — .fft","text":"function wraps around base R stats::fft function provides option normalization.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/dot-find_dc_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary search for the DC row in lexicographically sorted data — .find_dc_row","title":"Binary search for the DC row in lexicographically sorted data — .find_dc_row","text":"Binary search DC row lexicographically sorted data","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-find_dc_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary search for the DC row in lexicographically sorted data — .find_dc_row","text":"","code":".find_dc_row(df)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-find_dc_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binary search for the DC row in lexicographically sorted data — .find_dc_row","text":"df tibble data.frame .dim_* columns sorted lexicographically.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-find_dc_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binary search for the DC row in lexicographically sorted data — .find_dc_row","text":"Row index DC component (0,0,...,0).","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fourier_frequencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Fourier frequencies for default inputs — .fourier_frequencies","title":"Compute Fourier frequencies for default inputs — .fourier_frequencies","text":"Computes normalized Fourier frequencies scalar vector inputs, evenly spaced -0.5 0.5.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fourier_frequencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Fourier frequencies for default inputs — .fourier_frequencies","text":"","code":".fourier_frequencies(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-fourier_frequencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Fourier frequencies for default inputs — .fourier_frequencies","text":"x scalar vector representing length sequence.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fourier_frequencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Fourier frequencies for default inputs — .fourier_frequencies","text":"numeric vector containing normalized Fourier frequencies.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-frequency.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Frequency — .frequency","title":"Retrieve Frequency — .frequency","text":"Retrieves frequency time series object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-frequency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Frequency — .frequency","text":"","code":".frequency(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-frequency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Frequency — .frequency","text":"x tidy_fft object time series.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-frequency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Frequency — .frequency","text":"frequency value 1 time series.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-get_dim_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Columns Starting with .dim_ — .get_dim_cols","title":"Select Columns Starting with .dim_ — .get_dim_cols","text":"Selects columns data frame whose names start .dim_.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-get_dim_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Columns Starting with .dim_ — .get_dim_cols","text":"","code":".get_dim_cols(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-get_dim_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Columns Starting with .dim_ — .get_dim_cols","text":"x data frame tibble select columns.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-get_dim_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Columns Starting with .dim_ — .get_dim_cols","text":"data frame containing columns start .dim_.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_array.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an Object is an Array — .is_array","title":"Check if an Object is an Array — .is_array","text":"Determines object .dim attribute, indicating array.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an Object is an Array — .is_array","text":"","code":".is_array(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an Object is an Array — .is_array","text":"x R object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_array.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an Object is an Array — .is_array","text":"TRUE object .dim attribute, FALSE otherwise.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_complex.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an Object is Complex — .is_complex","title":"Check if an Object is Complex — .is_complex","text":"Checks whether object .is_complex attribute.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_complex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an Object is Complex — .is_complex","text":"","code":".is_complex(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_complex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an Object is Complex — .is_complex","text":"x R object check complexity.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_complex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an Object is Complex — .is_complex","text":"logical value indicating whether .is_complex attribute TRUE.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_normalized.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an Object is Normalized — .is_normalized","title":"Check if an Object is Normalized — .is_normalized","text":"Checks whether object .is_normalized attribute.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_normalized.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an Object is Normalized — .is_normalized","text":"","code":".is_normalized(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_normalized.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an Object is Normalized — .is_normalized","text":"x R object check normalization.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_normalized.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an Object is Normalized — .is_normalized","text":"logical value indicating whether .is_normalized attribute TRUE. Returns NULL attribute exist.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an Object is a Time Series — .is_ts","title":"Check if an Object is a Time Series — .is_ts","text":"Determines object .tsp attribute.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an Object is a Time Series — .is_ts","text":"","code":".is_ts(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an Object is a Time Series — .is_ts","text":"x R object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an Object is a Time Series — .is_ts","text":"TRUE object .tsp attribute, FALSE otherwise.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-num_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the number of samples in an input — .num_samples","title":"Compute the number of samples in an input — .num_samples","text":"helper function determines number samples input object. vector, returns length. matrix data frame, returns number rows.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-num_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the number of samples in an input — .num_samples","text":"","code":".num_samples(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-num_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the number of samples in an input — .num_samples","text":"x input object (scalar, vector, matrix, data frame).","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-num_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the number of samples in an input — .num_samples","text":"integer representing number samples (rows) input object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-nyquist.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Nyquist Frequency — .nyquist","title":"Compute Nyquist Frequency — .nyquist","text":"Computes Nyquist frequency object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-nyquist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Nyquist Frequency — .nyquist","text":"","code":".nyquist(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-nyquist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Nyquist Frequency — .nyquist","text":"x R object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-nyquist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Nyquist Frequency — .nyquist","text":"Nyquist frequency (.frequency(x) / 2).","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-phase_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Phase Difference Between Two Signals — .phase_diff","title":"Compute Phase Difference Between Two Signals — .phase_diff","text":"Computes phase difference two signals based cross-spectrum, symmetric redundant frequency components removed.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-phase_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Phase Difference Between Two Signals — .phase_diff","text":"","code":".phase_diff(a, b)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-phase_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Phase Difference Between Two Signals — .phase_diff","text":"tidy_fft object signal representing first input. b tidy_fft object signal representing second input.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-phase_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Phase Difference Between Two Signals — .phase_diff","text":"numeric value representing phase difference (radians) two signals.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-phase_diff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Phase Difference Between Two Signals — .phase_diff","text":"function computes cross-spectrum two signals, removes symmetric redundant frequency components, converts result polar representation, weights phase angles magnitudes, calculates weighted average phase difference. Removing symmetric components ensures accurate phase alignment, avoiding ambiguity caused redundant negative frequencies.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-set_repr.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Representation Format — .set_repr","title":"Set Representation Format — .set_repr","text":"Converts object specific representation format.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-set_repr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Representation Format — .set_repr","text":"","code":".set_repr(x, repr, .keep = \"unused\")"},{"path":"https://thk686.github.io/tidyfft/reference/dot-set_repr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Representation Format — .set_repr","text":"x R object. repr representation type (\"cplx\", \"rect\", \"polr\"). .keep Controls preservation data.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-set_repr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Representation Format — .set_repr","text":"object specified representation format.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-shift_phase.html","id":null,"dir":"Reference","previous_headings":"","what":"Shift Phase — .shift_phase","title":"Shift Phase — .shift_phase","text":"Adjusts phase Fourier coefficients.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-shift_phase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shift Phase — .shift_phase","text":"","code":".shift_phase(x, shift)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-shift_phase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shift Phase — .shift_phase","text":"x R object. shift numeric value indicating phase shift.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-size.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Object Size — .size","title":"Retrieve Object Size — .size","text":"Retrieves .size attribute object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Object Size — .size","text":"","code":".size(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Object Size — .size","text":"x R object check size.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Object Size — .size","text":".size attribute NULL present.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-tsp.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Time Series Parameters — .tsp","title":"Retrieve Time Series Parameters — .tsp","text":"Retrieves .tsp attribute object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-tsp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Time Series Parameters — .tsp","text":"","code":".tsp(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-tsp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Time Series Parameters — .tsp","text":"x R object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-tsp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Time Series Parameters — .tsp","text":".tsp attribute NULL present.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-variance.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Variance — .variance","title":"Compute Variance — .variance","text":"Computes variance Fourier coefficients.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Variance — .variance","text":"","code":".variance(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Variance — .variance","text":"x R object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-variance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Variance — .variance","text":"numeric variance value.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/fourier_frequencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Fourier Frequencies — fourier_frequencies","title":"Compute Fourier Frequencies — fourier_frequencies","text":"Computes Fourier frequencies various types inputs, scalars, vectors, matrices, time series, arrays. generic function dispatches appropriate methods based input type.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/fourier_frequencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Fourier Frequencies — fourier_frequencies","text":"","code":"fourier_frequencies(x)  # Default S3 method fourier_frequencies(x)  # S3 method for class 'ts' fourier_frequencies(x)  # S3 method for class 'array' fourier_frequencies(x)"},{"path":"https://thk686.github.io/tidyfft/reference/fourier_frequencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Fourier Frequencies — fourier_frequencies","text":"x input object. Supported input types: Scalar vector: length sequence. Time series (ts): Frequencies scaled based sampling rate. Multidimensional array matrix: Frequencies computed dimension.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/fourier_frequencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Fourier Frequencies — fourier_frequencies","text":"tibble : .dim_1, .dim_2, ..., represent Fourier frequencies dimension.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/fourier_frequencies.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Fourier Frequencies — fourier_frequencies","text":"function following methods: Default Input (fourier_frequencies.default): Computes normalized Fourier frequencies scalar vector inputs. Time Series Input (fourier_frequencies.ts): Computes frequencies scaled frequency attribute ts object. Multidimensional Arrays (fourier_frequencies.array): Computes frequencies dimension matrix array. See examples details case.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/fourier_frequencies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Fourier Frequencies — fourier_frequencies","text":"","code":"# Default input (vector) fourier_frequencies(8) #> # A tibble: 8 × 1 #>   .dim_1 #>    <dbl> #> 1  0     #> 2  0.125 #> 3  0.25  #> 4  0.375 #> 5  0.5   #> 6 -0.375 #> 7 -0.25  #> 8 -0.125  # Time series input ts(rnorm(36), frequency = 12) |> fourier_frequencies() #> # A tibble: 36 × 1 #>    .dim_1 #>     <dbl> #>  1  0     #>  2  0.333 #>  3  0.667 #>  4  1     #>  5  1.33  #>  6  1.67  #>  7  2     #>  8  2.33  #>  9  2.67  #> 10  3     #> # ℹ 26 more rows  # Multidimensional array input array(1:27, dim = c(3, 3, 3)) |> fourier_frequencies() #> # A tibble: 27 × 3 #>    .dim_1 .dim_2 .dim_3 #>     <dbl>  <dbl>  <dbl> #>  1  0      0      0     #>  2  0.333  0      0     #>  3 -0.333  0      0     #>  4  0      0.333  0     #>  5  0.333  0.333  0     #>  6 -0.333  0.333  0     #>  7  0     -0.333  0     #>  8  0.333 -0.333  0     #>  9 -0.333 -0.333  0     #> 10  0      0      0.333 #> # ℹ 17 more rows  # Matrix input matrix(1:9, nrow = 3, ncol = 3) |> fourier_frequencies() #> # A tibble: 9 × 2 #>   .dim_1 .dim_2 #>    <dbl>  <dbl> #> 1  0      0     #> 2  0.333  0     #> 3 -0.333  0     #> 4  0      0.333 #> 5  0.333  0.333 #> 6 -0.333  0.333 #> 7  0     -0.333 #> 8  0.333 -0.333 #> 9 -0.333 -0.333"},{"path":"https://thk686.github.io/tidyfft/reference/get_fx.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Fourier Coefficients and Components — get_fx","title":"Extract Fourier Coefficients and Components — get_fx","text":"utility functions extract specific components tidy_fft object. get_fx retrieves raw Fourier coefficients, get_fx_norm ensures coefficients either normalized normalized based norm parameter.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/get_fx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Fourier Coefficients and Components — get_fx","text":"","code":"get_fx(x)  get_fx_norm(x, norm = FALSE)  get_re(x)  get_im(x)  get_mod(x)  get_arg(x)"},{"path":"https://thk686.github.io/tidyfft/reference/get_fx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Fourier Coefficients and Components — get_fx","text":"x tidy_fft object containing FFT results. norm Logical. TRUE, forces normalized coefficients. FALSE, ensures non-normalized coefficients.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/get_fx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Fourier Coefficients and Components — get_fx","text":"requested components: get_fx: complex vector raw Fourier coefficients (fx) stored object. get_fx_norm: complex vector Fourier coefficients, explicitly normalized non-normalized based norm parameter. get_re: numeric vector real parts (re). get_im: numeric vector imaginary parts (im). get_mod: numeric vector magnitudes (mod). get_arg: numeric vector phase angles (arg), radians.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/get_fx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Fourier Coefficients and Components — get_fx","text":"get_fx: Returns coefficients stored tidy_fft object. get_fx_norm: Adjusts coefficients desired normalization state. get_re, get_im: Extract real imaginary components. get_mod, get_arg: Compute magnitude phase coefficients.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/get_fx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Fourier Coefficients and Components — get_fx","text":"","code":"tidy_fft(c(1, 0, -1, 0)) |> get_fx() #> [1] 0+0i 2+0i 0+0i 2+0i  tidy_fft(c(1, 0, -1, 0)) |> get_fx_norm(norm = TRUE) #> [1] 0.0+0i 0.5+0i 0.0+0i 0.5+0i  tidy_fft(c(1, 0, -1, 0)) |> get_re() #> [1] 0 2 0 2  tidy_fft(c(1, 0, -1, 0)) |> get_im() #> [1] 0 0 0 0  tidy_fft(c(1, 0, -1, 0)) |> get_mod() #> [1] 0 2 0 2  tidy_fft(c(1, 0, -1, 0)) |> get_arg() #> [1] 0 0 0 0"},{"path":"https://thk686.github.io/tidyfft/reference/get_rect.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Rectangular or Polar Components — get_rect","title":"Extract Rectangular or Polar Components — get_rect","text":"get_rect get_polr functions extract specific components tidy_fft object, representing Fourier coefficients either rectangular polar form.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/get_rect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Rectangular or Polar Components — get_rect","text":"","code":"get_rect(x)  get_polr(x)"},{"path":"https://thk686.github.io/tidyfft/reference/get_rect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Rectangular or Polar Components — get_rect","text":"x matrix object containing FFT results.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/get_rect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Rectangular or Polar Components — get_rect","text":"get_rect: matrix two columns: re: real part coefficients. im: imaginary part coefficients. get_polr: matrix two columns: mod: magnitude coefficients. arg: phase angle coefficients, radians.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/get_rect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Rectangular or Polar Components — get_rect","text":"","code":"tidy_fft(c(1, 0, -1, 0)) |> get_rect() #>      re im #> [1,]  0  0 #> [2,]  2  0 #> [3,]  0  0 #> [4,]  2  0  tidy_fft(c(1, 0, -1, 0)) |> get_polr() #>      mod arg #> [1,]   0   0 #> [2,]   2   0 #> [3,]   0   0 #> [4,]   2   0"},{"path":"https://thk686.github.io/tidyfft/reference/has_cplx.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Representations of a tidy_fft Object — has_cplx","title":"Check Representations of a tidy_fft Object — has_cplx","text":"functions check specific representations present tidy_fft object:","code":""},{"path":"https://thk686.github.io/tidyfft/reference/has_cplx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Representations of a tidy_fft Object — has_cplx","text":"","code":"has_cplx(x)  has_rect(x)  has_polr(x)"},{"path":"https://thk686.github.io/tidyfft/reference/has_cplx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Representations of a tidy_fft Object — has_cplx","text":"x tidy_fft object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/has_cplx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Representations of a tidy_fft Object — has_cplx","text":"Logical value (TRUE FALSE) indicating whether specified representation exists.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/has_cplx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check Representations of a tidy_fft Object — has_cplx","text":"has_cplx(): Checks object complex representation (fx column). has_rect(): Checks object rectangular representation (re, im columns). has_polr(): Checks object polar representation (mod, arg columns).","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/has_cplx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Representations of a tidy_fft Object — has_cplx","text":"","code":"tidy_fft(c(1, 0, -1, 0)) |> has_cplx() #> [1] TRUE  tidy_fft(c(1, 0, -1, 0)) |> has_rect() #> [1] FALSE  tidy_fft(c(1, 0, -1, 0)) |> has_polr() #> [1] FALSE"},{"path":"https://thk686.github.io/tidyfft/reference/phase_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Phase Difference and Maximum Correlation Between Two Signals — phase_diff","title":"Compute Phase Difference and Maximum Correlation Between Two Signals — phase_diff","text":"Computes phase difference maximum normalized correlation two input signals phase-aligning second signal (b) first signal ().","code":""},{"path":"https://thk686.github.io/tidyfft/reference/phase_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Phase Difference and Maximum Correlation Between Two Signals — phase_diff","text":"","code":"phase_diff(a, b)"},{"path":"https://thk686.github.io/tidyfft/reference/phase_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Phase Difference and Maximum Correlation Between Two Signals — phase_diff","text":"numeric vector time series representing first signal. b numeric vector time series representing second signal.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/phase_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Phase Difference and Maximum Correlation Between Two Signals — phase_diff","text":"numeric vector length two: first element represents phase difference (radians) required maximize alignment two signals. second element represents maximum normalized correlation achieved phase alignment.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/phase_diff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Phase Difference and Maximum Correlation Between Two Signals — phase_diff","text":"function performs following steps: Computes Fourier Transform input signals using tidy_fft. Calculates cross-spectrum signals. Converts cross-spectrum polar form computes weighted average phase difference. Adjusts phase second signal (b) using .shift_phase maximize alignment first signal (). Computes normalized correlation phase-aligned signals. correlation normalized using variances signals generally higher correlation original signals due optimal phase alignment.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/phase_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Phase Difference and Maximum Correlation Between Two Signals — phase_diff","text":"","code":"phase_diff(sin(seq(0, 2 * pi, length.out = 128)),            cos(seq(0, 2 * pi, length.out = 128))) #>  phase_diff correlation  #>   1.5707963   0.9999504"},{"path":"https://thk686.github.io/tidyfft/reference/plot.tidy_fft.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the modulus of FFT results — plot.tidy_fft","title":"Plot the modulus of FFT results — plot.tidy_fft","text":"Plots modulus FFT results frequencies.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/plot.tidy_fft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the modulus of FFT results — plot.tidy_fft","text":"","code":"# S3 method for class 'tidy_fft' plot(x, ...)"},{"path":"https://thk686.github.io/tidyfft/reference/plot.tidy_fft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the modulus of FFT results — plot.tidy_fft","text":"x tidy_fft object. ... passed ggplot.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/remove_dc.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove DC Component and Symmetric Frequencies — remove_dc","title":"Remove DC Component and Symmetric Frequencies — remove_dc","text":"functions operate tidy_fft objects manipulate filter Fourier coefficients.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/remove_dc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove DC Component and Symmetric Frequencies — remove_dc","text":"","code":"remove_dc(x)  remove_symmetric(x)  split_symmetric(x)"},{"path":"https://thk686.github.io/tidyfft/reference/remove_dc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove DC Component and Symmetric Frequencies — remove_dc","text":"x tidy_fft object containing Fourier coefficients associated metadata.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/remove_dc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove DC Component and Symmetric Frequencies — remove_dc","text":"tidy_fft object filtered coefficients.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/remove_dc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove DC Component and Symmetric Frequencies — remove_dc","text":"remove_dc(): Filters rows .dim_* columns value 0. remove_symmetric(): real-valued signals, filters redundant, complex-conjugate frequencies complex-valued signals, filtering applied symmetry relevant.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/remove_dc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove DC Component and Symmetric Frequencies — remove_dc","text":"","code":"matrix(rnorm(9), 3) |> tidy_fft() |> remove_dc() #> # A tibble: 8 × 3 #>   .dim_1 .dim_2 fx                   #>    <dbl>  <dbl> <cpl>                #> 1  0.333  0      2.323829-0.6833561i #> 2 -0.333  0      2.323829+0.6833561i #> 3  0      0.333 -4.835117+0.5116341i #> 4  0.333  0.333  1.061072+1.7263607i #> 5 -0.333  0.333  2.836266+0.4487876i #> 6  0     -0.333 -4.835117-0.5116341i #> 7  0.333 -0.333  2.836266-0.4487876i #> 8 -0.333 -0.333  1.061072-1.7263607i  matrix(rnorm(9), 3) |> tidy_fft() |> remove_symmetric() #> # A tibble: 5 × 3 #>   .dim_1 .dim_2 fx                    #>    <dbl>  <dbl> <cpl>                 #> 1  0      0      5.0619481+0.0000000i #> 2  0      0.333 -2.5730959-2.4707925i #> 3  0.333 -0.333  0.9175139-0.1657906i #> 4  0.333  0      1.0249740+0.7332478i #> 5  0.333  0.333 -2.3950765-1.2494756i"},{"path":"https://thk686.github.io/tidyfft/reference/tidy_fft.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform FFT and IFFT with Tidy Results — tidy_fft","title":"Perform FFT and IFFT with Tidy Results — tidy_fft","text":"Provides functions compute Fast Fourier Transform (FFT) inverse (IFFT) maintaining results tidy format using tibbles. Supports vectors, time series (ts), arrays inputs.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/tidy_fft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform FFT and IFFT with Tidy Results — tidy_fft","text":"","code":"tidy_fft(x, norm = FALSE)  # Default S3 method tidy_fft(x, norm = FALSE)  # S3 method for class 'ts' tidy_fft(x, norm = FALSE)  # S3 method for class 'array' tidy_fft(x, norm = FALSE)  tidy_ifft(x)"},{"path":"https://thk686.github.io/tidyfft/reference/tidy_fft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform FFT and IFFT with Tidy Results — tidy_fft","text":"x Input object compute FFT IFFT. can : numeric vector (default method tidy_fft). time series object (ts) tidy_fft.ts. multidimensional numeric array tidy_fft.array. tidy_fft object tidy_ifft. norm Logical. TRUE, computes normalized coefficients FFT.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/tidy_fft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform FFT and IFFT with Tidy Results — tidy_fft","text":"tidy_fft: tibble containing: Fourier frequencies (.dim_1, .dim_2, etc.). FFT values stored fx column complex values. tidy_ifft: vector, array, time series object representing reconstructed signal.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/tidy_fft.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform FFT and IFFT with Tidy Results — tidy_fft","text":"tidy_fft organizes FFT results tidy tibble downstream analysis. tidy_ifft ensures reconstructed signals match input structure (e.g., arrays, ts).","code":""},{"path":"https://thk686.github.io/tidyfft/reference/tidy_fft.html","id":"fft","dir":"Reference","previous_headings":"","what":"FFT","title":"Perform FFT and IFFT with Tidy Results — tidy_fft","text":"tidy_fft function computes FFT different input types: Default Input (tidy_fft.default): Computes FFT numeric vectors. Time Series Input (tidy_fft.ts): Handles FFT ts objects, scaling frequencies appropriately. Array Input (tidy_fft.array): Processes multidimensional arrays. Results returned tidy tibbles containing Fourier frequencies FFT values.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/tidy_fft.html","id":"ifft","dir":"Reference","previous_headings":"","what":"IFFT","title":"Perform FFT and IFFT with Tidy Results — tidy_fft","text":"tidy_ifft function reconstructs original signal tidy_fft object. supports vectors, arrays, time series inputs. inverse transform preserves original structure (e.g., array dimensions time series attributes).","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/tidy_fft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform FFT and IFFT with Tidy Results — tidy_fft","text":"","code":"tidy_fft(c(1, 0, -1, 0)) #> # A tibble: 4 × 2 #>   .dim_1 fx    #> *  <dbl> <cpl> #> 1   0    0+0i  #> 2   0.25 2+0i  #> 3   0.5  0+0i  #> 4  -0.25 2+0i   tidy_fft(c(1, 0, -1, 0)) |> tidy_ifft() #> [1]  1  0 -1  0  ts(sin(1:10), frequency = 12) |> tidy_fft() #> # A tibble: 10 × 2 #>    .dim_1 fx                    #>  *  <dbl> <cpl>                 #>  1    0    1.4111884+0.0000000i #>  2    1.2  1.7597704+2.0140018i #>  3    2.4 -0.0540927-3.7860893i #>  4    3.6  0.6552682-1.0310219i #>  5    4.8  0.7536372-0.4010851i #>  6    6    0.7743552+0.0000000i #>  7   -4.8  0.7536372+0.4010851i #>  8   -3.6  0.6552682+1.0310219i #>  9   -2.4 -0.0540927+3.7860893i #> 10   -1.2  1.7597704-2.0140018i  array(1:8, dim = c(2, 2, 2)) |> tidy_fft() #> # A tibble: 8 × 4 #>   .dim_1 .dim_2 .dim_3 fx     #> *  <dbl>  <dbl>  <dbl> <cpl>  #> 1    0      0      0    36+0i #> 2    0.5    0      0    -4+0i #> 3    0      0.5    0    -8+0i #> 4    0.5    0.5    0     0+0i #> 5    0      0      0.5 -16+0i #> 6    0.5    0      0.5   0+0i #> 7    0      0.5    0.5   0+0i #> 8    0.5    0.5    0.5   0+0i"},{"path":"https://thk686.github.io/tidyfft/reference/tidyfft-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tidyfft: Tidy manipulation of fourier transformed data — tidyfft-package","title":"tidyfft: Tidy manipulation of fourier transformed data — tidyfft-package","text":"Provides functions storing fourier coefficients tibble manipulating various ways. main different tidy_fft base R tidy_fft computes normalized fourier frequencies cycles per stride, .e., cycles per interval samples, often point confusion new users convenient plotting, etc. frequencies coefficients stored tibble (data.frame), easy processing , e.g., dplyr facilitated.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/tidyfft-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tidyfft: Tidy manipulation of fourier transformed data — tidyfft-package","text":"Maintainer: Timothy Keitt tkeitt@gmail.com","code":""},{"path":"https://thk686.github.io/tidyfft/reference/to_cplx.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a tidy_fft Object Between Representations — to_cplx","title":"Convert a tidy_fft Object Between Representations — to_cplx","text":"functions convert tidy_fft object specified representation: to_cplx(): Converts complex representation (fx). to_rect(): Converts rectangular representation (re, im). to_polr(): Converts polar representation (mod, arg).","code":""},{"path":"https://thk686.github.io/tidyfft/reference/to_cplx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a tidy_fft Object Between Representations — to_cplx","text":"","code":"to_cplx(x, .keep = \"unused\")  to_rect(x, .keep = \"unused\")  to_polr(x, .keep = \"unused\")"},{"path":"https://thk686.github.io/tidyfft/reference/to_cplx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a tidy_fft Object Between Representations — to_cplx","text":"x tidy_fft object. .keep Specifies columns retain. See dplyr::mutate().","code":""},{"path":"https://thk686.github.io/tidyfft/reference/to_cplx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a tidy_fft Object Between Representations — to_cplx","text":"modified tidy_fft object containing specified representation: to_cplx(): Adds fx column complex values. to_rect(): Adds re im columns rectangular components. to_polr(): Adds mod arg columns polar components.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/to_cplx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a tidy_fft Object Between Representations — to_cplx","text":"to_cplx(): Converts rectangular (re, im) polar (mod, arg) components complex form. to_rect(): Converts complex (fx) polar components rectangular form. to_polr(): Converts complex (fx) rectangular components polar form.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/to_cplx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a tidy_fft Object Between Representations — to_cplx","text":"","code":"tidy_fft(c(1, 0, -1, 0)) |> to_cplx() #> # A tibble: 4 × 2 #>   .dim_1 fx    #> *  <dbl> <cpl> #> 1   0    0+0i  #> 2   0.25 2+0i  #> 3   0.5  0+0i  #> 4  -0.25 2+0i   tidy_fft(c(1, 0, -1, 0)) |> to_rect() #> # A tibble: 4 × 3 #>   .dim_1    re    im #>    <dbl> <dbl> <dbl> #> 1   0        0     0 #> 2   0.25     2     0 #> 3   0.5      0     0 #> 4  -0.25     2     0  tidy_fft(c(1, 0, -1, 0)) |> to_polr() #> # A tibble: 4 × 3 #>   .dim_1   mod   arg #>    <dbl> <dbl> <dbl> #> 1   0        0     0 #> 2   0.25     2     0 #> 3   0.5      0     0 #> 4  -0.25     2     0"}]
