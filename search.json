[{"path":"https://thk686.github.io/tidyfft/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 tidyfft authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://thk686.github.io/tidyfft/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Keitt. Author, maintainer.","code":""},{"path":"https://thk686.github.io/tidyfft/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keitt T (2024). tidyfft: Tidy manipulation fourier transformed data. R package version 0.0.0.9000, https://thk686.github.io/tidyfft/, https://github.com/thk686/tidyfft.","code":"@Manual{,   title = {tidyfft: Tidy manipulation of fourier transformed data},   author = {Timothy Keitt},   year = {2024},   note = {R package version 0.0.0.9000, https://thk686.github.io/tidyfft/},   url = {https://github.com/thk686/tidyfft}, }"},{"path":"https://thk686.github.io/tidyfft/index.html","id":"tidyfft-","dir":"","previous_headings":"","what":"Tidy manipulation of fourier transformed data","title":"Tidy manipulation of fourier transformed data","text":"goal tidyfft make working fft’s R easier consistent. follows tidy philosophy storing output tibble. Features: Provides frequencies dimension cycles per sample-interval. Caches attributes sufficient allow reconstruction original object computing inverse transform. Easy conversion complex, rectangular, polar representations. Tracks complex versus real valued input.","code":""},{"path":"https://thk686.github.io/tidyfft/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tidy manipulation of fourier transformed data","text":"can install development version tidyfft GitHub :","code":"# install.packages(\"pak\") pak::pak(\"thk686/tidyfft\")"},{"path":"https://thk686.github.io/tidyfft/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Tidy manipulation of fourier transformed data","text":"Using tidy_fft ggplot.","code":"tidy_fft(sunspot.month) |>   dplyr::mutate(fx = fx / dplyr::n()) |>   to_rect(.keep = \"all\") |>   to_polr(.keep = \"all\") |>   print() -> ssm.fft #> # A tibble: 3,177 × 6 #>      dim_1 fx              re     im   mod    arg #>      <dbl> <cpl>        <dbl>  <dbl> <dbl>  <dbl> #>  1 0       51.96+0.00i 52.0    0     52.0   0     #>  2 0.00378  4.37+4.99i  4.37   4.99   6.63  0.852 #>  3 0.00755 -0.86+5.08i -0.860  5.08   5.15  1.74  #>  4 0.0113  -2.65-5.70i -2.65  -5.70   6.29 -2.01  #>  5 0.0151  -4.64-0.59i -4.64  -0.586  4.68 -3.02  #>  6 0.0189  -2.51+4.07i -2.51   4.07   4.79  2.12  #>  7 0.0227  -0.68+2.26i -0.684  2.26   2.36  1.87  #>  8 0.0264  -1.07-2.22i -1.07  -2.22   2.46 -2.02  #>  9 0.0302   0.18-1.36i  0.180 -1.36   1.37 -1.44  #> 10 0.0340   2.46-1.10i  2.46  -1.10   2.70 -0.422 #> # ℹ 3,167 more rows ggplot(fortify(sunspot.month)) +   geom_line(aes(x = Index, y = Data)) +   ylab(\"Sunspot count\") +   xlab(\"Year\") +   theme_bw() -> p1  xlocs <- c(1, 0.1, 0.01) xlabs <- c(\"1\", \"10\", \"100\")  ssm.fft |>   dplyr::filter(dim_1 > 0) |>   ggplot() +   geom_point(aes(x = dim_1, y = mod)) +   geom_smooth(aes(x = dim_1, y = mod)) +   scale_y_continuous(trans = \"log\", labels = function(y) signif(y, 1)) +   scale_x_continuous(trans = \"log\", breaks = xlocs, labels = xlabs) +   xlab(\"Cycle duration (years)\") +   ylab(\"Mean amplitude\") +   theme_bw() -> p2  print(p1 / p2)"},{"path":"https://thk686.github.io/tidyfft/reference/can_repr.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and Retrieve Representations of a tidy_fft Object — can_repr","title":"Check and Retrieve Representations of a tidy_fft Object — can_repr","text":"functions check retrieve specific representations tidy_fft object. Supported representations include: Complex (\"cplx\"): Contains column fx complex Fourier coefficients. Rectangular (\"rect\"): Contains columns re (real) im (imaginary) components. Polar (\"polr\"): Contains columns mod (modulus) arg (argument).","code":""},{"path":"https://thk686.github.io/tidyfft/reference/can_repr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and Retrieve Representations of a tidy_fft Object — can_repr","text":"","code":"can_repr(x, repr)  get_repr(x)  has_cplx(x)  has_rect(x)  has_polr(x)"},{"path":"https://thk686.github.io/tidyfft/reference/can_repr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and Retrieve Representations of a tidy_fft Object — can_repr","text":"x tidy_fft object. repr can_repr(), target representation check. character vector one (\"polr\", \"rect\", \"cplx\").","code":""},{"path":"https://thk686.github.io/tidyfft/reference/can_repr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and Retrieve Representations of a tidy_fft Object — can_repr","text":"can_repr(): logical value (TRUE FALSE) indicating object specified representations. get_repr(): character vector representations present object. has_cplx(), has_rect(), has_polr(): Logical values (TRUE FALSE) indicating presence specific representations.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/can_repr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check and Retrieve Representations of a tidy_fft Object — can_repr","text":"","code":"tft <- tidy_fft(c(1, 0, -1, 0))  # Check specific representations can_repr(tft, \"cplx\") # TRUE #> [1] TRUE can_repr(tft, \"rect\") # FALSE #> [1] FALSE  # Retrieve current representations get_repr(tft) # \"cplx\" #> [1] \"cplx\"  # Check individual representations has_cplx(tft) # TRUE #> [1] TRUE has_rect(tft) # FALSE #> [1] FALSE has_polr(tft) # FALSE #> [1] FALSE"},{"path":"https://thk686.github.io/tidyfft/reference/cross_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","title":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","text":"cross_spec function computes cross-spectrum two inputs using Fourier transform. supports multiple input types including numeric vectors, time series (ts), arrays, tidy_fft objects. function provides options normalization controlling whether conjugate second input used.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/cross_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","text":"","code":"cross_spec(a, b, norm = FALSE, conj = TRUE)  # Default S3 method cross_spec(a, b, norm = FALSE, conj = TRUE)  # S3 method for class 'ts' cross_spec(a, b, norm = FALSE, conj = TRUE)  # S3 method for class 'array' cross_spec(a, b, norm = FALSE, conj = TRUE)  # S3 method for class 'tidy_fft' cross_spec(a, b, norm = FALSE, conj = TRUE)"},{"path":"https://thk686.github.io/tidyfft/reference/cross_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","text":"first input cross FFT. Supported types include numeric vectors, ts objects, arrays, tidy_fft objects. b second input cross FFT. Must match dimensions structure . norm Logical; TRUE, normalizes Fourier transforms computation. Default FALSE. conj Logical; TRUE, uses complex conjugate Fourier transform b. Default TRUE.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/cross_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","text":"object representing cross-spectrum: default tidy_fft methods: tidy_fft object. ts objects: tidy_fft object tsp attributes inherited . arrays: tidy_fft object dim attributes inherited .","code":""},{"path":"https://thk686.github.io/tidyfft/reference/cross_spec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","text":"cross_spec function generic specialized methods input type. ts array inputs, additional attributes tsp dim preserved. %cfft% operator provides shorthand calling function.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/cross_spec.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","text":"cross_spec(default): Default method computing cross FFT. Converts inputs tidy_fft objects computation. cross_spec(ts): Method time series (ts) objects. Ensures time series frequencies consistent preserves tsp attribute. cross_spec(array): Method array inputs. Ensures dimensions consistent preserves dim attribute. cross_spec(tidy_fft): Method tidy_fft objects. Performs cross-frequency transform directly using Fourier transforms b.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/cross_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Cross-Spectrum (Cross FFT) — cross_spec","text":"","code":"# Example with numeric vectors a <- rnorm(8) b <- rnorm(8) result <- cross_spec(a, b)  # Example with the infix operator result <- a %cfft% b #> Error in a %cfft% b: could not find function \"%cfft%\"  # Example with time series ts_a <- ts(rnorm(8), frequency = 4) ts_b <- ts(rnorm(8), frequency = 4) result <- cross_spec(ts_a, ts_b)  # Example with `tidy_fft` objects tidy_a <- tidy_fft(a) tidy_b <- tidy_fft(b) result <- cross_spec(tidy_a, tidy_b)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-as_tidy_fft_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an Object to a Tidy FFT Object — .as_tidy_fft_obj","title":"Convert an Object to a Tidy FFT Object — .as_tidy_fft_obj","text":"internal helper function applies necessary structure class attributes convert given object tidy_fft object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-as_tidy_fft_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an Object to a Tidy FFT Object — .as_tidy_fft_obj","text":"","code":".as_tidy_fft_obj(x, .is_normalized, .is_complex, ...)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-as_tidy_fft_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an Object to a Tidy FFT Object — .as_tidy_fft_obj","text":"x input object convert, typically tibble data frame. ... Additional attributes include structured object, metadata specific attributes required Fourier Transform analysis. .norm input normalized? .complex original data complex?","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-as_tidy_fft_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an Object to a Tidy FFT Object — .as_tidy_fft_obj","text":"input object x, tidy_fft class additional attributes provided ....","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-as_tidy_fft_obj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert an Object to a Tidy FFT Object — .as_tidy_fft_obj","text":"tidy_fft object tibble-like structure additional class attributes used represent Fourier Transform results tidy format.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-dim.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the dimensions of an object — .dim","title":"Retrieve the dimensions of an object — .dim","text":"Retrieves .dim attribute given object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-dim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the dimensions of an object — .dim","text":"","code":".dim(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-dim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the dimensions of an object — .dim","text":"x object check .dim attribute.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-dim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the dimensions of an object — .dim","text":"value .dim attribute, NULL present.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fft.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Fast Fourier Transform (FFT) of a Vector — .fft","title":"Compute the Fast Fourier Transform (FFT) of a Vector — .fft","text":"function computes Fast Fourier Transform (FFT) numeric vector. Optionally, normalizes result dividing length input vector.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Fast Fourier Transform (FFT) of a Vector — .fft","text":"","code":".fft(x, norm = FALSE)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-fft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Fast Fourier Transform (FFT) of a Vector — .fft","text":"x numeric vector representing input signal transform. norm logical value indicating whether normalize FFT output dividing length input vector. Default FALSE.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Fast Fourier Transform (FFT) of a Vector — .fft","text":"complex vector representing FFT input signal.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fft.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the Fast Fourier Transform (FFT) of a Vector — .fft","text":"function wraps around base R stats::fft function provides option normalization.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Fast Fourier Transform (FFT) of a Vector — .fft","text":"","code":"x <- c(1, 2, 3, 4) .fft(x) #> Error in .fft(x): could not find function \".fft\" .fft(x, norm = TRUE) #> Error in .fft(x, norm = TRUE): could not find function \".fft\""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fourier_frequencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Fourier frequencies for default inputs — .fourier_frequencies","title":"Compute Fourier frequencies for default inputs — .fourier_frequencies","text":"Computes normalized Fourier frequencies scalar vector inputs, evenly spaced -0.5 0.5.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fourier_frequencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Fourier frequencies for default inputs — .fourier_frequencies","text":"","code":".fourier_frequencies(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-fourier_frequencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Fourier frequencies for default inputs — .fourier_frequencies","text":"x scalar vector representing length sequence.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-fourier_frequencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Fourier frequencies for default inputs — .fourier_frequencies","text":"numeric vector containing normalized Fourier frequencies.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_array.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is an array — .is_array","title":"Check if an object is an array — .is_array","text":"Determines object .dim attribute, indicating array.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is an array — .is_array","text":"","code":".is_array(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is an array — .is_array","text":"x object check.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_array.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an object is an array — .is_array","text":"TRUE object .dim attribute, FALSE otherwise.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_complex.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is complex — .is_complex","title":"Check if an object is complex — .is_complex","text":"Retrieves .is_complex attribute given object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_complex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is complex — .is_complex","text":"","code":".is_complex(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_complex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is complex — .is_complex","text":"x object check .is_complex attribute.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_complex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an object is complex — .is_complex","text":"value .is_complex attribute, NULL present.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is a time series — .is_ts","title":"Check if an object is a time series — .is_ts","text":"Determines object .tsp attribute, indicating time series.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is a time series — .is_ts","text":"","code":".is_ts(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is a time series — .is_ts","text":"x object check.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-is_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an object is a time series — .is_ts","text":"TRUE object .tsp attribute, FALSE otherwise.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-num_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the number of samples in an input — .num_samples","title":"Compute the number of samples in an input — .num_samples","text":"helper function determines number samples input object. vector, returns length. matrix data frame, returns number rows.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-num_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the number of samples in an input — .num_samples","text":"","code":".num_samples(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-num_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the number of samples in an input — .num_samples","text":"x input object (scalar, vector, matrix, data frame).","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-num_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the number of samples in an input — .num_samples","text":"integer representing number samples (rows) input object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-size.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the size of an object — .size","title":"Retrieve the size of an object — .size","text":"Retrieves .size attribute given object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the size of an object — .size","text":"","code":".size(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the size of an object — .size","text":"x object check .size attribute.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the size of an object — .size","text":"value .size attribute, NULL present.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-tsp.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the time series parameters of an object — .tsp","title":"Retrieve the time series parameters of an object — .tsp","text":"Retrieves .tsp attribute given object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-tsp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the time series parameters of an object — .tsp","text":"","code":".tsp(x)"},{"path":"https://thk686.github.io/tidyfft/reference/dot-tsp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the time series parameters of an object — .tsp","text":"x object check .tsp attribute.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/dot-tsp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the time series parameters of an object — .tsp","text":"value .tsp attribute, NULL present.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/fourier_frequencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Fourier Frequencies — fourier_frequencies","title":"Compute Fourier Frequencies — fourier_frequencies","text":"Computes Fourier frequencies various types inputs, scalars, vectors, matrices, time series, arrays. generic function dispatches appropriate methods based input type.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/fourier_frequencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Fourier Frequencies — fourier_frequencies","text":"","code":"fourier_frequencies(x)  # Default S3 method fourier_frequencies(x)  # S3 method for class 'ts' fourier_frequencies(x)  # S3 method for class 'array' fourier_frequencies(x)"},{"path":"https://thk686.github.io/tidyfft/reference/fourier_frequencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Fourier Frequencies — fourier_frequencies","text":"x input object. Supported input types: Scalar vector: length sequence. Time series (ts): Frequencies scaled based sampling rate. Multidimensional array matrix: Frequencies computed dimension.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/fourier_frequencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Fourier Frequencies — fourier_frequencies","text":"tibble : dim_1, dim_2, ..., represent Fourier frequencies dimension.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/fourier_frequencies.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Fourier Frequencies — fourier_frequencies","text":"function following methods: Default Input (fourier_frequencies.default): Computes normalized Fourier frequencies scalar vector inputs. Time Series Input (fourier_frequencies.ts): Computes frequencies scaled frequency attribute ts object. Multidimensional Arrays (fourier_frequencies.array): Computes frequencies dimension matrix array. See examples details case.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/fourier_frequencies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Fourier Frequencies — fourier_frequencies","text":"","code":"# Default input (vector) fourier_frequencies(8) #> # A tibble: 8 × 1 #>    dim_1 #>    <dbl> #> 1  0     #> 2  0.125 #> 3  0.25  #> 4  0.375 #> 5  0.5   #> 6 -0.375 #> 7 -0.25  #> 8 -0.125  # Time series input ts_obj <- ts(rnorm(36), frequency = 12) fourier_frequencies(ts_obj) #> # A tibble: 36 × 1 #>    dim_1 #>    <dbl> #>  1 0     #>  2 0.333 #>  3 0.667 #>  4 1     #>  5 1.33  #>  6 1.67  #>  7 2     #>  8 2.33  #>  9 2.67  #> 10 3     #> # ℹ 26 more rows  # Multidimensional array input array_input <- array(1:27, dim = c(3, 3, 3)) fourier_frequencies(array_input) #> # A tibble: 27 × 3 #>     dim_1  dim_2 dim_3 #>     <dbl>  <dbl> <dbl> #>  1  0      0     0     #>  2  0.333  0     0     #>  3 -0.333  0     0     #>  4  0      0.333 0     #>  5  0.333  0.333 0     #>  6 -0.333  0.333 0     #>  7  0     -0.333 0     #>  8  0.333 -0.333 0     #>  9 -0.333 -0.333 0     #> 10  0      0     0.333 #> # ℹ 17 more rows  # Matrix input matrix_input <- matrix(1:9, nrow = 3, ncol = 3) fourier_frequencies(matrix_input) #> # A tibble: 9 × 2 #>    dim_1  dim_2 #>    <dbl>  <dbl> #> 1  0      0     #> 2  0.333  0     #> 3 -0.333  0     #> 4  0      0.333 #> 5  0.333  0.333 #> 6 -0.333  0.333 #> 7  0     -0.333 #> 8  0.333 -0.333 #> 9 -0.333 -0.333"},{"path":"https://thk686.github.io/tidyfft/reference/get_fx.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Fourier Coefficients and Components — get_fx","title":"Extract Fourier Coefficients and Components — get_fx","text":"utility functions extract specific components tidy_fft object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/get_fx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Fourier Coefficients and Components — get_fx","text":"","code":"get_fx(x)  get_re(x)  get_im(x)  get_mod(x)  get_arg(x)  get_fx_norm(x, norm = FALSE)"},{"path":"https://thk686.github.io/tidyfft/reference/get_fx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Fourier Coefficients and Components — get_fx","text":"x tidy_fft object containing FFT results.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/get_fx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Fourier Coefficients and Components — get_fx","text":"requested components: get_fx: complex vector Fourier coefficients (fx). get_re: numeric vector real parts (re). get_im: numeric vector imaginary parts (im). get_mod: numeric vector magnitudes (mod). get_arg: numeric vector phase angles (arg), radians.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/get_fx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Fourier Coefficients and Components — get_fx","text":"","code":"fft_result <- tidy_fft(c(1, 0, -1, 0)) |>   to_rect(.keep = \"all\") |>   to_polr(.keep = \"all\")  # Extract components fx_values <- get_fx(fft_result) re_values <- get_re(fft_result) im_values <- get_im(fft_result) mod_values <- get_mod(fft_result) arg_values <- get_arg(fft_result)  print(fx_values) #> [1] 0+0i 2+0i 0+0i 2+0i print(re_values) #> [1] 0 2 0 2 print(im_values) #> [1] 0 0 0 0 print(mod_values) #> [1] 0 2 0 2 print(arg_values) #> [1] 0 0 0 0"},{"path":"https://thk686.github.io/tidyfft/reference/get_rect.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Rectangular or Polar Components — get_rect","title":"Extract Rectangular or Polar Components — get_rect","text":"get_rect get_polr functions extract specific components tidy_fft object, representing Fourier coefficients either rectangular polar form.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/get_rect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Rectangular or Polar Components — get_rect","text":"","code":"get_rect(x)  get_polr(x)"},{"path":"https://thk686.github.io/tidyfft/reference/get_rect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Rectangular or Polar Components — get_rect","text":"x tidy_fft object containing FFT results.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/get_rect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Rectangular or Polar Components — get_rect","text":"get_rect: matrix two columns: re: real part coefficients. im: imaginary part coefficients. get_polr: matrix two columns: mod: magnitude coefficients. arg: phase angle coefficients, radians.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/get_rect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Rectangular or Polar Components — get_rect","text":"","code":"fft_result <- tidy_fft(c(1, 0, -1, 0))  # Extract rectangular components rect_values <- get_rect(fft_result) print(rect_values) #>      re im #> [1,]  0  0 #> [2,]  2  0 #> [3,]  0  0 #> [4,]  2  0  # Extract polar components polr_values <- get_polr(fft_result) print(polr_values) #>      mod arg #> [1,]   0   0 #> [2,]   2   0 #> [3,]   0   0 #> [4,]   2   0"},{"path":"https://thk686.github.io/tidyfft/reference/plot.tidy_fft.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the modulus of FFT results — plot.tidy_fft","title":"Plot the modulus of FFT results — plot.tidy_fft","text":"Plots modulus FFT results frequencies.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/plot.tidy_fft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the modulus of FFT results — plot.tidy_fft","text":"","code":"# S3 method for class 'tidy_fft' plot(x, ...)"},{"path":"https://thk686.github.io/tidyfft/reference/plot.tidy_fft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the modulus of FFT results — plot.tidy_fft","text":"x tidy_fft object. ... passed ggplot.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/tidy_fft.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute FFT and Return a Tidy Result — tidy_fft","title":"Compute FFT and Return a Tidy Result — tidy_fft","text":"Computes Fast Fourier Transform (FFT) various input types, including vectors, time series (ts), arrays. result returned tidy tibble containing Fourier frequencies FFT values.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/tidy_fft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute FFT and Return a Tidy Result — tidy_fft","text":"","code":"tidy_fft(x, norm = FALSE)  # Default S3 method tidy_fft(x, norm = FALSE)  # S3 method for class 'ts' tidy_fft(x, norm = FALSE)  # S3 method for class 'array' tidy_fft(x, norm = FALSE)"},{"path":"https://thk686.github.io/tidyfft/reference/tidy_fft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute FFT and Return a Tidy Result — tidy_fft","text":"x Input object compute FFT. can : numeric vector (default method). time series object (ts). multidimensional numeric array.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/tidy_fft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute FFT and Return a Tidy Result — tidy_fft","text":"tibble containing: Fourier frequencies: Represented columns dim_1, dim_2, ..., depending input dimensions. FFT values: Stored fx column complex values.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/tidy_fft.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute FFT and Return a Tidy Result — tidy_fft","text":"generic function methods specific input types: Default Input (tidy_fft.default): Computes FFT numeric vector. Time Series Input (tidy_fft.ts): Computes FFT ts object, scaling frequencies time series frequency attribute. Array Input (tidy_fft.array): Computes FFT multidimensional array. method returns tidy tibble Fourier frequencies (dim_1, dim_2, etc.) paired corresponding FFT values.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/tidy_fft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute FFT and Return a Tidy Result — tidy_fft","text":"","code":"# FFT for a numeric vector tidy_fft(c(1, 0, -1, 0)) #> # A tibble: 4 × 2 #>   dim_1 fx    #> * <dbl> <cpl> #> 1  0    0+0i  #> 2  0.25 2+0i  #> 3  0.5  0+0i  #> 4 -0.25 2+0i   # FFT for a time series ts_obj <- ts(sin(1:10), frequency = 12) tidy_fft(ts_obj) #> # A tibble: 10 × 2 #>    dim_1 fx                    #>  * <dbl> <cpl>                 #>  1   0    1.4111884+0.0000000i #>  2   1.2  1.7597704+2.0140018i #>  3   2.4 -0.0540927-3.7860893i #>  4   3.6  0.6552682-1.0310219i #>  5   4.8  0.7536372-0.4010851i #>  6   6    0.7743552+0.0000000i #>  7  -4.8  0.7536372+0.4010851i #>  8  -3.6  0.6552682+1.0310219i #>  9  -2.4 -0.0540927+3.7860893i #> 10  -1.2  1.7597704-2.0140018i  # FFT for a multidimensional array arr <- array(1:8, dim = c(2, 2, 2)) tidy_fft(arr) #> # A tibble: 8 × 4 #>   dim_1 dim_2 dim_3 fx     #> * <dbl> <dbl> <dbl> <cpl>  #> 1   0     0     0    36+0i #> 2   0.5   0     0    -4+0i #> 3   0     0.5   0    -8+0i #> 4   0.5   0.5   0     0+0i #> 5   0     0     0.5 -16+0i #> 6   0.5   0     0.5   0+0i #> 7   0     0.5   0.5   0+0i #> 8   0.5   0.5   0.5   0+0i"},{"path":"https://thk686.github.io/tidyfft/reference/tidy_ifft.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Inverse FFT on a Tidy Result — tidy_ifft","title":"Perform Inverse FFT on a Tidy Result — tidy_ifft","text":"Computes inverse Fast Fourier Transform (IFFT) reconstruct original signal tidy_fft object.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/tidy_ifft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Inverse FFT on a Tidy Result — tidy_ifft","text":"","code":"tidy_ifft(x)"},{"path":"https://thk686.github.io/tidyfft/reference/tidy_ifft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Inverse FFT on a Tidy Result — tidy_ifft","text":"x tidy_fft object stored FFT results.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/tidy_ifft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Inverse FFT on a Tidy Result — tidy_ifft","text":"vector, array, time series object representing reconstructed signal FFT results. original signal real-valued, IFFT returns real part reconstruction.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/tidy_ifft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Inverse FFT on a Tidy Result — tidy_ifft","text":"","code":"# Example with FFT and inverse FFT fft_result <- tidy_fft(c(1, 0, -1, 0)) original_signal <- tidy_ifft(fft_result) print(original_signal) #> [1]  1  0 -1  0"},{"path":"https://thk686.github.io/tidyfft/reference/tidyfft-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tidyfft: Tidy manipulation of fourier transformed data — tidyfft-package","title":"tidyfft: Tidy manipulation of fourier transformed data — tidyfft-package","text":"Provides functions storing fourier coefficients tibble manipulating various ways. main different tidy_fft base R tidy_fft computes normalized fourier frequencies cycles per stride, .e., cycles per interval samples, often point confusion new users convenient plotting, etc. frequencies coefficients stored tibble (data.frame), easy processing , e.g., dplyr facilitated.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/tidyfft-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tidyfft: Tidy manipulation of fourier transformed data — tidyfft-package","text":"Maintainer: Timothy Keitt tkeitt@gmail.com","code":""},{"path":"https://thk686.github.io/tidyfft/reference/to_cplx.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a tidy_fft Object Between Representations — to_cplx","title":"Convert a tidy_fft Object Between Representations — to_cplx","text":"functions convert tidy_fft object specified representation: to_cplx(): Converts complex representation (fx). to_rect(): Converts rectangular representation (re, im). to_polr(): Converts polar representation (mod, arg).","code":""},{"path":"https://thk686.github.io/tidyfft/reference/to_cplx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a tidy_fft Object Between Representations — to_cplx","text":"","code":"to_cplx(x, .keep = \"unused\")  to_rect(x, .keep = \"unused\")  to_polr(x, .keep = \"unused\")"},{"path":"https://thk686.github.io/tidyfft/reference/to_cplx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a tidy_fft Object Between Representations — to_cplx","text":"x tidy_fft object. .keep Specifies columns retain. See mutate().","code":""},{"path":"https://thk686.github.io/tidyfft/reference/to_cplx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a tidy_fft Object Between Representations — to_cplx","text":"modified tidy_fft object containing specified representation: to_cplx(): Adds fx column complex values. to_rect(): Adds re im columns rectangular components. to_polr(): Adds mod arg columns polar components.","code":""},{"path":"https://thk686.github.io/tidyfft/reference/to_cplx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a tidy_fft Object Between Representations — to_cplx","text":"to_cplx(): Converts rectangular (re, im) polar (mod, arg) components complex form. to_rect(): Converts complex (fx) polar components rectangular form. to_polr(): Converts complex (fx) rectangular components polar form.","code":""},{"path":[]},{"path":"https://thk686.github.io/tidyfft/reference/to_cplx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a tidy_fft Object Between Representations — to_cplx","text":"","code":"tft <- tidy_fft(c(1, 0, -1, 0))  # Convert to different representations tft_cplx <- to_cplx(tft) # Complex representation tft_rect <- to_rect(tft_cplx) # Rectangular representation tft_polr <- to_polr(tft_cplx) # Polar representation  # Print results print(tft_cplx) #> # A tibble: 4 × 2 #>   dim_1 fx    #> * <dbl> <cpl> #> 1  0    0+0i  #> 2  0.25 2+0i  #> 3  0.5  0+0i  #> 4 -0.25 2+0i  print(tft_rect) #> # A tibble: 4 × 3 #>   dim_1    re    im #>   <dbl> <dbl> <dbl> #> 1  0        0     0 #> 2  0.25     2     0 #> 3  0.5      0     0 #> 4 -0.25     2     0 print(tft_polr) #> # A tibble: 4 × 3 #>   dim_1   mod   arg #>   <dbl> <dbl> <dbl> #> 1  0        0     0 #> 2  0.25     2     0 #> 3  0.5      0     0 #> 4 -0.25     2     0"}]
